// Integration test for /api/content/upload
// Requires: jest, supertest, and your Express app

const request = require('supertest');
const app = require('../server'); // Adjust path to your Express app

// Optional: Clean up Firestore and timers after tests to avoid Jest teardown errors
const { db } = require('../firebaseAdmin');

describe('Content Upload & Promotion Integration', () => {
  afterAll(async () => {
    // Attempt to terminate Firestore client
    if (db && db.terminate) {
      await db.terminate().catch(() => {});
    }
    // Optionally clear timers or background jobs if needed
    // jest.clearAllTimers();
  });

  it('should upload content and create promotion schedules for all platforms', async () => {
    const testUserId = 'testUser123';
    const payload = {
      title: 'Test Content',
      type: 'video',
      url: 'https://example.com/video.mp4',
      description: 'This is a test video.',
      target_platforms: ['youtube', 'tiktok', 'instagram', 'facebook', 'twitter'],
      scheduled_promotion_time: new Date(Date.now() + 3600000).toISOString(),
      promotion_frequency: 'once',
      schedule_hint: { when: new Date(Date.now() + 3600000).toISOString(), frequency: 'once', timezone: 'UTC' },
      auto_promote: { youtube: { enabled: true }, twitter: { enabled: true } },
      quality_score: 95,
      quality_feedback: [],
      quality_enhanced: true
    };

    // Simulate auth (replace with your auth logic)
    const res = await request(app)
      .post('/api/content/upload')
      .set('Authorization', `Bearer test-token-for-${testUserId}`)
      .send(payload);

    expect(res.statusCode).toBe(201);
    expect(res.body.content).toBeDefined();
    expect(res.body.promotion_schedule).toBeDefined();
    expect(res.body.content.target_platforms.length).toBeGreaterThanOrEqual(5);
    expect(res.body.promotion_schedule.schedule_type).toBe('specific');
    expect(res.body.content.status).toBe('pending');
    expect(res.body.growth_guarantee_badge).toBeDefined();
    expect(res.body.auto_promotion).toBeDefined();
    // Add more assertions for notifications, tracking, etc. as needed
  });
});
