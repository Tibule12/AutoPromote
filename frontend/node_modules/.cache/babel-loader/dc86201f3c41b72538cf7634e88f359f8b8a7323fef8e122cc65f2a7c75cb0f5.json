{"ast":null,"code":"import React,{useEffect,useState}from'react';import DatabaseSyncService from'../utils/dbSchemaSync';/**\n * Component that ensures database schema is aligned with admin dashboard requirements\n * This component doesn't render anything visible but performs the database checks\n * on mount and can be included in the main App component\n */const DatabaseSync=()=>{const[syncStatus,setSyncStatus]=useState('pending');useEffect(()=>{const performDatabaseSync=async()=>{try{setSyncStatus('syncing');const result=await DatabaseSyncService.validateDatabaseSchema();setSyncStatus(result?'success':'error');}catch(error){console.error('Database sync error:',error);setSyncStatus('error');}};performDatabaseSync();},[]);// This component doesn't render anything visible\nreturn null;};export default DatabaseSync;","map":{"version":3,"names":["React","useEffect","useState","DatabaseSyncService","DatabaseSync","syncStatus","setSyncStatus","performDatabaseSync","result","validateDatabaseSchema","error","console"],"sources":["C:/Users/Tulani.Mtshwelo/hello/AutoPromote/frontend/src/components/DatabaseSync.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DatabaseSyncService from '../utils/dbSchemaSync';\n\n/**\n * Component that ensures database schema is aligned with admin dashboard requirements\n * This component doesn't render anything visible but performs the database checks\n * on mount and can be included in the main App component\n */\nconst DatabaseSync = () => {\n  const [syncStatus, setSyncStatus] = useState('pending');\n  \n  useEffect(() => {\n    const performDatabaseSync = async () => {\n      try {\n        setSyncStatus('syncing');\n        const result = await DatabaseSyncService.validateDatabaseSchema();\n        setSyncStatus(result ? 'success' : 'error');\n      } catch (error) {\n        console.error('Database sync error:', error);\n        setSyncStatus('error');\n      }\n    };\n    \n    performDatabaseSync();\n  }, []);\n  \n  // This component doesn't render anything visible\n  return null;\n};\n\nexport default DatabaseSync;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,mBAAmB,KAAM,uBAAuB,CAEvD;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGJ,QAAQ,CAAC,SAAS,CAAC,CAEvDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAM,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACFD,aAAa,CAAC,SAAS,CAAC,CACxB,KAAM,CAAAE,MAAM,CAAG,KAAM,CAAAL,mBAAmB,CAACM,sBAAsB,CAAC,CAAC,CACjEH,aAAa,CAACE,MAAM,CAAG,SAAS,CAAG,OAAO,CAAC,CAC7C,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CJ,aAAa,CAAC,OAAO,CAAC,CACxB,CACF,CAAC,CAEDC,mBAAmB,CAAC,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,MAAO,KAAI,CACb,CAAC,CAED,cAAe,CAAAH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}