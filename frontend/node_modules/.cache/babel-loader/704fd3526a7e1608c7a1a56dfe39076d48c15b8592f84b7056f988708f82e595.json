{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tulani.Mtshwelo\\\\Promo\\\\AutoPromote\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { auth, db, storage } from './firebaseClient';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport LoginForm from './LoginForm';\nimport AdminLoginForm from './AdminLoginForm';\nimport RegisterForm from './RegisterForm';\nimport ContentUploadForm from './ContentUploadForm';\nimport ContentList from './ContentList';\nimport AdminDashboard from './AdminDashboard';\nimport EnvTest from './components/EnvTest';\nimport EnvChecker from './components/EnvChecker';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(() => {\n    const stored = localStorage.getItem('user');\n    return stored ? JSON.parse(stored) : null;\n  });\n  const [content, setContent] = useState([]);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showAdminLogin, setShowAdminLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [analytics, setAnalytics] = useState(null);\n\n  // Authentication listener\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async firebaseUser => {\n      if (!firebaseUser) {\n        // User is signed out of Firebase\n        handleLogout();\n        return;\n      }\n      try {\n        // Get a fresh token\n        const token = await firebaseUser.getIdToken(true);\n\n        // Get the latest claims\n        const idTokenResult = await firebaseUser.getIdTokenResult(true);\n        const hasAdminClaim = idTokenResult.claims.admin === true || idTokenResult.claims.role === 'admin';\n\n        // Check for stored user data\n        const storedUser = localStorage.getItem('user');\n        const userData = storedUser ? JSON.parse(storedUser) : null;\n        if (userData && userData.email === firebaseUser.email) {\n          // Update the token and admin status in the stored data\n          userData.token = token;\n          userData.isAdmin = hasAdminClaim;\n          userData.role = hasAdminClaim ? 'admin' : userData.role;\n          localStorage.setItem('user', JSON.stringify(userData));\n          setUser(userData);\n          setIsAdmin(hasAdminClaim || userData.role === 'admin');\n          console.log('Updated user state with new token and claims:', {\n            email: userData.email,\n            role: userData.role,\n            isAdmin: hasAdminClaim\n          });\n        }\n        console.log('Firebase auth state changed:', firebaseUser.email, 'Admin:', hasAdminClaim);\n      } catch (error) {\n        console.error('Error refreshing token:', error);\n        handleLogout();\n      }\n    });\n\n    // Check if we need to show admin login form based on URL\n    if (window.location.pathname === '/admin-login') {\n      setShowAdminLogin(true);\n      setShowLogin(false);\n      setShowRegister(false);\n    }\n\n    // Cleanup subscription\n    return () => unsubscribe();\n  }, []);\n  useEffect(() => {\n    if (user && user.token) {\n      setIsAdmin(user.role === 'admin');\n      if (user.role === 'admin') {\n        fetchAnalytics();\n      } else {\n        fetchUserContent();\n      }\n    }\n    // eslint-disable-next-line\n  }, [user]);\n  const fetchUserContent = async () => {\n    try {\n      if (!user || !user.token) {\n        console.log('No user or token available');\n        return;\n      }\n      console.log('Fetching content with token');\n\n      // Get a fresh token\n      const currentUser = auth.currentUser;\n      const freshToken = currentUser ? await currentUser.getIdToken(true) : user.token;\n      const res = await fetch('http://localhost:5000/api/content/my-content', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${freshToken}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Origin': 'http://localhost:3000'\n        },\n        mode: 'cors'\n      });\n      if (res.status === 401) {\n        console.log('Authentication failed, logging out');\n        handleLogout();\n        return;\n      }\n      if (!res.ok) {\n        console.error('Failed to fetch content:', res.status, await res.text());\n        return;\n      }\n      const data = await res.json();\n      setContent(data.content || []);\n    } catch (error) {\n      console.error('Failed to fetch content:', error);\n    }\n  };\n  const fetchAnalytics = async () => {\n    if (!user || !user.token) {\n      console.log('No user or token available for analytics');\n      return;\n    }\n\n    // Check admin status again to be sure\n    const isAdminUser = user.role === 'admin' || user.isAdmin === true;\n    if (!isAdminUser) {\n      console.error('Non-admin user attempting to fetch analytics');\n      return;\n    }\n    try {\n      console.log('Fetching admin analytics with token');\n\n      // Try both endpoints - first the local one, then the remote one if needed\n      let res = null;\n      let error = null;\n      try {\n        res = await fetch('http://localhost:5000/api/admin/analytics/overview', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${user.token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        });\n        console.log('Local analytics API response status:', res.status);\n      } catch (localError) {\n        console.warn('Local analytics API failed, trying remote:', localError);\n        error = localError;\n      }\n\n      // If local fails or returns non-2xx, try remote\n      if (!res || !res.ok) {\n        try {\n          res = await fetch('https://autopromote.onrender.com/api/admin/analytics/overview', {\n            method: 'GET',\n            headers: {\n              'Authorization': `Bearer ${user.token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n          });\n          console.log('Remote analytics API response status:', res.status);\n        } catch (remoteError) {\n          console.error('Remote analytics API also failed:', remoteError);\n          error = error || remoteError;\n        }\n      }\n      if (!res || !res.ok) {\n        if (res && res.status === 401) {\n          console.error('Admin authentication failed:', await res.text());\n          // Don't log out - user might still be valid but not admin\n          setIsAdmin(false);\n          return;\n        }\n        console.error('Failed to fetch analytics:', res ? res.status : 'No response');\n        return;\n      }\n      const data = await res.json();\n      console.log('Analytics data received:', Object.keys(data).length, 'fields');\n      setAnalytics(data);\n    } catch (error) {\n      console.error('Error in fetchAnalytics:', error);\n    }\n  };\n  const loginUser = async (email, password) => {\n    try {\n      // Sign in with Firebase\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const {\n        user: firebaseUser\n      } = userCredential;\n\n      // Get the ID token\n      const idToken = await firebaseUser.getIdToken();\n\n      // Verify token with our backend\n      const res = await fetch('https://autopromote.onrender.com/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Origin': 'http://localhost:3000'\n        },\n        body: JSON.stringify({\n          idToken\n        })\n      });\n      if (res.ok) {\n        const data = await res.json();\n        handleLogin({\n          ...data.user,\n          token: data.token\n        });\n      } else {\n        const error = await res.json();\n        throw new Error(error.message || 'Login failed');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      alert(error.message || 'Login failed');\n    }\n  };\n  const registerUser = async (name, email, password) => {\n    try {\n      const res = await fetch('https://autopromote.onrender.com/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      if (res.ok) {\n        const data = await res.json();\n        handleRegister({\n          ...data.user,\n          token: data.token\n        });\n      } else {\n        alert('Registration failed');\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      alert('Registration error');\n    }\n  };\n  const handleLogin = async userData => {\n    try {\n      // Clear any existing data\n      localStorage.clear();\n\n      // Ensure we have a token\n      if (!userData.token) {\n        console.error('No token provided in user data');\n        return;\n      }\n\n      // Check for admin status from various sources\n      const isAdminRole = userData.role === 'admin';\n      const hasAdminClaim = userData.isAdmin === true;\n      const isAdminUser = isAdminRole || hasAdminClaim;\n\n      // Log the authentication data\n      console.log('Logging in user:', {\n        email: userData.email,\n        role: userData.role,\n        isAdmin: isAdminUser,\n        hasToken: Boolean(userData.token)\n      });\n\n      // Update the user data with definitive admin status\n      const updatedUserData = {\n        ...userData,\n        role: isAdminUser ? 'admin' : userData.role,\n        isAdmin: isAdminUser\n      };\n\n      // Store the complete user data\n      localStorage.setItem('user', JSON.stringify(updatedUserData));\n\n      // Update the state\n      setUser(updatedUserData);\n      setIsAdmin(isAdminUser);\n      setShowLogin(false);\n      console.log('Login successful:', updatedUserData.role, 'IsAdmin:', isAdminUser);\n\n      // Fetch data based on user role\n      if (isAdminUser) {\n        await fetchAnalytics();\n      } else {\n        await fetchUserContent();\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      handleLogout();\n    }\n  };\n  const handleRegister = userData => {\n    setUser(userData);\n    setShowRegister(false);\n  };\n  const handleLogout = async () => {\n    try {\n      // Sign out from Firebase\n      await auth.signOut();\n\n      // Clear local state\n      setUser(null);\n      setContent([]);\n      setAnalytics(null);\n      setIsAdmin(false);\n\n      // Clear local storage\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      localStorage.removeItem('adminToken');\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  // Firebase Storage upload\n  const handleUploadContent = async contentData => {\n    try {\n      let url = '';\n      if (contentData.type === 'article') {\n        url = contentData.articleText || '';\n      } else {\n        // Upload file to Firebase Storage\n        const file = contentData.file;\n        if (!file) {\n          alert('No file selected!');\n          return;\n        }\n\n        // Debug: log file info\n        console.log('Uploading file:', file);\n\n        // Check file type and size (optional)\n        if (file.size > 50 * 1024 * 1024) {\n          alert('File is too large. Max 50MB allowed.');\n          return;\n        }\n\n        // Get fresh token\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n          throw new Error('No authenticated user found');\n        }\n        const filePath = `content/${Date.now()}_${file.name}`;\n        const storageRef = ref(storage, filePath);\n        console.log('Starting file upload to:', filePath);\n\n        // Upload the file\n        const uploadResult = await uploadBytes(storageRef, file);\n        console.log('Upload completed:', uploadResult);\n\n        // Get the download URL\n        url = await getDownloadURL(storageRef);\n        console.log('Download URL obtained:', url);\n        if (!url) {\n          alert('Could not get download URL for uploaded file.');\n          return;\n        }\n      }\n      const payload = {\n        title: contentData.title,\n        type: contentData.type,\n        url,\n        description: contentData.description || ''\n      };\n\n      // Get fresh token for API call\n      const currentUser = auth.currentUser;\n      const freshToken = currentUser ? await currentUser.getIdToken(true) : user.token;\n      console.log('Uploading content with fresh token');\n\n      // Try local API first, then remote as fallback\n      let res = null;\n      let error = null;\n      try {\n        res = await fetch('http://localhost:5000/api/content/upload', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${freshToken}`,\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        console.log('Local content upload response status:', res.status);\n      } catch (localError) {\n        console.warn('Local content upload API failed, trying remote:', localError);\n        error = localError;\n      }\n\n      // If local fails or returns non-2xx, try remote\n      if (!res || !res.ok) {\n        try {\n          res = await fetch('https://autopromote.onrender.com/api/content/upload', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${freshToken}`,\n              'Accept': 'application/json'\n            },\n            body: JSON.stringify(payload)\n          });\n          console.log('Remote content upload response status:', res.status);\n        } catch (remoteError) {\n          console.error('Remote content upload API also failed:', remoteError);\n          error = error || remoteError;\n        }\n      }\n      if (!res || !res.ok) {\n        if (res && res.status === 401) {\n          console.error('Content upload authentication failed:', await res.text());\n          // Don't log out - user might still be valid but token expired\n          alert('Authentication failed. Please try logging in again.');\n          return;\n        }\n        console.error('Failed to upload content:', res ? res.status : 'No response');\n        const errorText = res ? await res.text() : 'Network error';\n        alert(`Failed to upload content: ${errorText}`);\n        return;\n      }\n      const result = await res.json();\n      console.log('Content uploaded successfully:', result);\n      alert('Content uploaded successfully!');\n\n      // Refresh content list\n      fetchUserContent();\n    } catch (error) {\n      console.error('Error uploading content:', error);\n      alert('Error uploading content: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(EnvTest, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EnvChecker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AutoPromote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Welcome, \", user.name, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowLogin(true);\n              setShowRegister(false);\n              setShowAdminLogin(false);\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowRegister(true);\n              setShowLogin(false);\n              setShowAdminLogin(false);\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [showLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(LoginForm, {\n          onLogin: handleLogin,\n          loginUser: loginUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this), showAdminLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(AdminLoginForm, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            margin: '15px 0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowLogin(true);\n              setShowRegister(false);\n              setShowAdminLogin(false);\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: '#1976d2',\n              textDecoration: 'underline',\n              cursor: 'pointer'\n            },\n            children: \"Back to Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this), showRegister && /*#__PURE__*/_jsxDEV(RegisterForm, {\n        registerUser: registerUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 26\n      }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isAdmin || user.role === 'admin' || user.isAdmin === true ? /*#__PURE__*/_jsxDEV(AdminDashboard, {\n          analytics: analytics,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ContentUploadForm, {\n            onUpload: handleUploadContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ContentList, {\n            content: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), !user && !showLogin && !showRegister && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"WelcomeSection\",\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          minHeight: '60vh',\n          background: 'linear-gradient(135deg, #1976d2 0%, #64b5f6 100%)',\n          color: '#fff',\n          borderRadius: '16px',\n          boxShadow: '0 8px 32px rgba(25, 118, 210, 0.2)',\n          padding: '48px 24px',\n          margin: '32px auto',\n          maxWidth: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\",\n          alt: \"AutoPromote Logo\",\n          style: {\n            width: 80,\n            marginBottom: 24\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: '2.5rem',\n            fontWeight: 700,\n            marginBottom: 16\n          },\n          children: \"Welcome to AutoPromote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '1.2rem',\n            marginBottom: 32,\n            textAlign: 'center',\n            maxWidth: 400\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 500\n            },\n            children: \"AI-powered platform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this), \" for content promotion and monetization.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 115\n          }, this), \"Grow your audience, boost your revenue, and automate your success.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowRegister(true),\n          style: {\n            background: '#fff',\n            color: '#1976d2',\n            fontWeight: 600,\n            fontSize: '1.1rem',\n            padding: '12px 32px',\n            borderRadius: '8px',\n            border: 'none',\n            boxShadow: '0 2px 8px rgba(25, 118, 210, 0.15)',\n            cursor: 'pointer',\n            transition: 'background 0.2s'\n          },\n          onMouseOver: e => e.target.style.background = '#e3f2fd',\n          onMouseOut: e => e.target.style.background = '#fff',\n          children: \"Get Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 5\n  }, this);\n}\n\n// ...LoginForm, RegisterForm, ContentUploadForm, ContentList, AdminDashboard remain unchanged...\n_s(App, \"DH85segKRcuwUvj3DO5P2b3Wu0o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","auth","db","storage","onAuthStateChanged","ref","uploadBytes","getDownloadURL","LoginForm","AdminLoginForm","RegisterForm","ContentUploadForm","ContentList","AdminDashboard","EnvTest","EnvChecker","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","setUser","stored","localStorage","getItem","JSON","parse","content","setContent","showLogin","setShowLogin","showAdminLogin","setShowAdminLogin","showRegister","setShowRegister","isAdmin","setIsAdmin","analytics","setAnalytics","unsubscribe","firebaseUser","handleLogout","token","getIdToken","idTokenResult","getIdTokenResult","hasAdminClaim","claims","admin","role","storedUser","userData","email","setItem","stringify","console","log","error","window","location","pathname","fetchAnalytics","fetchUserContent","currentUser","freshToken","res","fetch","method","headers","mode","status","ok","text","data","json","isAdminUser","localError","warn","remoteError","Object","keys","length","loginUser","password","userCredential","signInWithEmailAndPassword","idToken","body","handleLogin","Error","message","alert","registerUser","name","handleRegister","clear","isAdminRole","hasToken","Boolean","updatedUserData","signOut","removeItem","handleUploadContent","contentData","url","type","articleText","file","size","filePath","Date","now","storageRef","uploadResult","payload","title","description","errorText","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onLogin","style","textAlign","margin","background","border","color","textDecoration","cursor","onUpload","display","flexDirection","alignItems","justifyContent","minHeight","borderRadius","boxShadow","padding","maxWidth","src","alt","width","marginBottom","fontSize","fontWeight","transition","onMouseOver","e","target","onMouseOut","_c","$RefreshReg$"],"sources":["C:/Users/Tulani.Mtshwelo/Promo/AutoPromote/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { auth, db, storage } from './firebaseClient';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport LoginForm from './LoginForm';\nimport AdminLoginForm from './AdminLoginForm';\nimport RegisterForm from './RegisterForm';\nimport ContentUploadForm from './ContentUploadForm';\nimport ContentList from './ContentList';\nimport AdminDashboard from './AdminDashboard';\nimport EnvTest from './components/EnvTest';\nimport EnvChecker from './components/EnvChecker';\n\nfunction App() {\n  const [user, setUser] = useState(() => {\n    const stored = localStorage.getItem('user');\n    return stored ? JSON.parse(stored) : null;\n  });\n  const [content, setContent] = useState([]);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showAdminLogin, setShowAdminLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [analytics, setAnalytics] = useState(null);\n\n  // Authentication listener\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\n      if (!firebaseUser) {\n        // User is signed out of Firebase\n        handleLogout();\n        return;\n      }\n\n      try {\n        // Get a fresh token\n        const token = await firebaseUser.getIdToken(true);\n        \n        // Get the latest claims\n        const idTokenResult = await firebaseUser.getIdTokenResult(true);\n        const hasAdminClaim = idTokenResult.claims.admin === true || idTokenResult.claims.role === 'admin';\n        \n        // Check for stored user data\n        const storedUser = localStorage.getItem('user');\n        const userData = storedUser ? JSON.parse(storedUser) : null;\n        \n        if (userData && userData.email === firebaseUser.email) {\n          // Update the token and admin status in the stored data\n          userData.token = token;\n          userData.isAdmin = hasAdminClaim;\n          userData.role = hasAdminClaim ? 'admin' : userData.role;\n          \n          localStorage.setItem('user', JSON.stringify(userData));\n          setUser(userData);\n          setIsAdmin(hasAdminClaim || userData.role === 'admin');\n          \n          console.log('Updated user state with new token and claims:', {\n            email: userData.email,\n            role: userData.role,\n            isAdmin: hasAdminClaim\n          });\n        }\n\n        console.log('Firebase auth state changed:', firebaseUser.email, 'Admin:', hasAdminClaim);\n      } catch (error) {\n        console.error('Error refreshing token:', error);\n        handleLogout();\n      }\n    });\n\n    // Check if we need to show admin login form based on URL\n    if (window.location.pathname === '/admin-login') {\n      setShowAdminLogin(true);\n      setShowLogin(false);\n      setShowRegister(false);\n    }\n\n    // Cleanup subscription\n    return () => unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    if (user && user.token) {\n      setIsAdmin(user.role === 'admin');\n      if (user.role === 'admin') {\n        fetchAnalytics();\n      } else {\n        fetchUserContent();\n      }\n    }\n    // eslint-disable-next-line\n  }, [user]);\n\n  const fetchUserContent = async () => {\n    try {\n      if (!user || !user.token) {\n        console.log('No user or token available');\n        return;\n      }\n\n      console.log('Fetching content with token');\n      \n      // Get a fresh token\n      const currentUser = auth.currentUser;\n      const freshToken = currentUser ? await currentUser.getIdToken(true) : user.token;\n      \n      const res = await fetch('http://localhost:5000/api/content/my-content', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${freshToken}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Origin': 'http://localhost:3000'\n        },\n        mode: 'cors'\n      });\n      \n      if (res.status === 401) {\n        console.log('Authentication failed, logging out');\n        handleLogout();\n        return;\n      }\n      \n      if (!res.ok) {\n        console.error('Failed to fetch content:', res.status, await res.text());\n        return;\n      }\n      \n      const data = await res.json();\n      setContent(data.content || []);\n    } catch (error) {\n      console.error('Failed to fetch content:', error);\n    }\n  };\n\n  const fetchAnalytics = async () => {\n    if (!user || !user.token) {\n      console.log('No user or token available for analytics');\n      return;\n    }\n    \n    // Check admin status again to be sure\n    const isAdminUser = user.role === 'admin' || user.isAdmin === true;\n    if (!isAdminUser) {\n      console.error('Non-admin user attempting to fetch analytics');\n      return;\n    }\n    \n    try {\n      console.log('Fetching admin analytics with token');\n      \n      // Try both endpoints - first the local one, then the remote one if needed\n      let res = null;\n      let error = null;\n      \n      try {\n        res = await fetch('http://localhost:5000/api/admin/analytics/overview', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${user.token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        });\n        console.log('Local analytics API response status:', res.status);\n      } catch (localError) {\n        console.warn('Local analytics API failed, trying remote:', localError);\n        error = localError;\n      }\n      \n      // If local fails or returns non-2xx, try remote\n      if (!res || !res.ok) {\n        try {\n          res = await fetch('https://autopromote.onrender.com/api/admin/analytics/overview', {\n            method: 'GET',\n            headers: {\n              'Authorization': `Bearer ${user.token}`,\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n          });\n          console.log('Remote analytics API response status:', res.status);\n        } catch (remoteError) {\n          console.error('Remote analytics API also failed:', remoteError);\n          error = error || remoteError;\n        }\n      }\n      \n      if (!res || !res.ok) {\n        if (res && res.status === 401) {\n          console.error('Admin authentication failed:', await res.text());\n          // Don't log out - user might still be valid but not admin\n          setIsAdmin(false);\n          return;\n        }\n        \n        console.error('Failed to fetch analytics:', res ? res.status : 'No response');\n        return;\n      }\n      \n      const data = await res.json();\n      console.log('Analytics data received:', Object.keys(data).length, 'fields');\n      setAnalytics(data);\n    } catch (error) {\n      console.error('Error in fetchAnalytics:', error);\n    }\n  };\n\n  const loginUser = async (email, password) => {\n    try {\n      // Sign in with Firebase\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const { user: firebaseUser } = userCredential;\n\n      // Get the ID token\n      const idToken = await firebaseUser.getIdToken();\n\n      // Verify token with our backend\n      const res = await fetch('https://autopromote.onrender.com/api/auth/login', {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Origin': 'http://localhost:3000'\n        },\n        body: JSON.stringify({ idToken }),\n      });\n\n      if (res.ok) {\n        const data = await res.json();\n        handleLogin({\n          ...data.user,\n          token: data.token\n        });\n      } else {\n        const error = await res.json();\n        throw new Error(error.message || 'Login failed');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      alert(error.message || 'Login failed');\n    }\n  };\n\n  const registerUser = async (name, email, password) => {\n    try {\n      const res = await fetch('https://autopromote.onrender.com/api/auth/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ name, email, password }),\n      });\n      if (res.ok) {\n        const data = await res.json();\n        handleRegister({ ...data.user, token: data.token });\n      } else {\n        alert('Registration failed');\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      alert('Registration error');\n    }\n  };\n\n  const handleLogin = async (userData) => {\n    try {\n      // Clear any existing data\n      localStorage.clear();\n      \n      // Ensure we have a token\n      if (!userData.token) {\n        console.error('No token provided in user data');\n        return;\n      }\n      \n      // Check for admin status from various sources\n      const isAdminRole = userData.role === 'admin';\n      const hasAdminClaim = userData.isAdmin === true;\n      const isAdminUser = isAdminRole || hasAdminClaim;\n      \n      // Log the authentication data\n      console.log('Logging in user:', {\n        email: userData.email,\n        role: userData.role,\n        isAdmin: isAdminUser,\n        hasToken: Boolean(userData.token)\n      });\n      \n      // Update the user data with definitive admin status\n      const updatedUserData = {\n        ...userData,\n        role: isAdminUser ? 'admin' : userData.role,\n        isAdmin: isAdminUser\n      };\n      \n      // Store the complete user data\n      localStorage.setItem('user', JSON.stringify(updatedUserData));\n      \n      // Update the state\n      setUser(updatedUserData);\n      setIsAdmin(isAdminUser);\n      setShowLogin(false);\n      \n      console.log('Login successful:', updatedUserData.role, 'IsAdmin:', isAdminUser);\n      \n      // Fetch data based on user role\n      if (isAdminUser) {\n        await fetchAnalytics();\n      } else {\n        await fetchUserContent();\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      handleLogout();\n    }\n  };\n\n  const handleRegister = (userData) => {\n    setUser(userData);\n    setShowRegister(false);\n  };\n\n  const handleLogout = async () => {\n    try {\n      // Sign out from Firebase\n      await auth.signOut();\n      \n      // Clear local state\n      setUser(null);\n      setContent([]);\n      setAnalytics(null);\n      setIsAdmin(false);\n      \n      // Clear local storage\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      localStorage.removeItem('adminToken');\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  // Firebase Storage upload\n  const handleUploadContent = async (contentData) => {\n    try {\n      let url = '';\n      if (contentData.type === 'article') {\n        url = contentData.articleText || '';\n      } else {\n        // Upload file to Firebase Storage\n        const file = contentData.file;\n        if (!file) {\n          alert('No file selected!');\n          return;\n        }\n\n        // Debug: log file info\n        console.log('Uploading file:', file);\n\n        // Check file type and size (optional)\n        if (file.size > 50 * 1024 * 1024) {\n          alert('File is too large. Max 50MB allowed.');\n          return;\n        }\n\n        // Get fresh token\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n          throw new Error('No authenticated user found');\n        }\n\n        const filePath = `content/${Date.now()}_${file.name}`;\n        const storageRef = ref(storage, filePath);\n\n        console.log('Starting file upload to:', filePath);\n\n        // Upload the file\n        const uploadResult = await uploadBytes(storageRef, file);\n        console.log('Upload completed:', uploadResult);\n\n        // Get the download URL\n        url = await getDownloadURL(storageRef);\n        console.log('Download URL obtained:', url);\n\n        if (!url) {\n          alert('Could not get download URL for uploaded file.');\n          return;\n        }\n      }\n\n      const payload = {\n        title: contentData.title,\n        type: contentData.type,\n        url,\n        description: contentData.description || '',\n      };\n\n      // Get fresh token for API call\n      const currentUser = auth.currentUser;\n      const freshToken = currentUser ? await currentUser.getIdToken(true) : user.token;\n\n      console.log('Uploading content with fresh token');\n\n      // Try local API first, then remote as fallback\n      let res = null;\n      let error = null;\n\n      try {\n        res = await fetch('http://localhost:5000/api/content/upload', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${freshToken}`,\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify(payload),\n        });\n        console.log('Local content upload response status:', res.status);\n      } catch (localError) {\n        console.warn('Local content upload API failed, trying remote:', localError);\n        error = localError;\n      }\n\n      // If local fails or returns non-2xx, try remote\n      if (!res || !res.ok) {\n        try {\n          res = await fetch('https://autopromote.onrender.com/api/content/upload', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${freshToken}`,\n              'Accept': 'application/json'\n            },\n            body: JSON.stringify(payload),\n          });\n          console.log('Remote content upload response status:', res.status);\n        } catch (remoteError) {\n          console.error('Remote content upload API also failed:', remoteError);\n          error = error || remoteError;\n        }\n      }\n\n      if (!res || !res.ok) {\n        if (res && res.status === 401) {\n          console.error('Content upload authentication failed:', await res.text());\n          // Don't log out - user might still be valid but token expired\n          alert('Authentication failed. Please try logging in again.');\n          return;\n        }\n\n        console.error('Failed to upload content:', res ? res.status : 'No response');\n        const errorText = res ? await res.text() : 'Network error';\n        alert(`Failed to upload content: ${errorText}`);\n        return;\n      }\n\n      const result = await res.json();\n      console.log('Content uploaded successfully:', result);\n      alert('Content uploaded successfully!');\n\n      // Refresh content list\n      fetchUserContent();\n\n    } catch (error) {\n      console.error('Error uploading content:', error);\n      alert('Error uploading content: ' + error.message);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <EnvTest />\n      <EnvChecker />\n      <header className=\"App-header\">\n        <h1>AutoPromote</h1>\n        <nav>\n          {user ? (\n            <div>\n              <span>Welcome, {user.name}!</span>\n              <button onClick={handleLogout}>Logout</button>\n            </div>\n          ) : (\n            <div>\n              <button onClick={() => { setShowLogin(true); setShowRegister(false); setShowAdminLogin(false); }}>Login</button>\n              <button onClick={() => { setShowRegister(true); setShowLogin(false); setShowAdminLogin(false); }}>Register</button>\n            </div>\n          )}\n        </nav>\n      </header>\n\n      <main>\n        {showLogin && (\n          <div>\n            <LoginForm onLogin={handleLogin} loginUser={loginUser} />\n          </div>\n        )}\n        \n        {/* Admin login form is only rendered when showAdminLogin is true */}\n        {showAdminLogin && (\n          <div>\n            <AdminLoginForm onLogin={handleLogin} />\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\n              <button \n                onClick={() => { setShowLogin(true); setShowRegister(false); setShowAdminLogin(false); }}\n                style={{ \n                  background: 'none', \n                  border: 'none', \n                  color: '#1976d2', \n                  textDecoration: 'underline',\n                  cursor: 'pointer' \n                }}\n              >\n                Back to Login\n              </button>\n            </div>\n          </div>\n        )}\n        \n        {showRegister && <RegisterForm registerUser={registerUser} />}\n\n        {user && (\n          <>\n            {isAdmin || user.role === 'admin' || user.isAdmin === true ? (\n              <AdminDashboard analytics={analytics} user={user} />\n            ) : (\n              <div>\n                <ContentUploadForm onUpload={handleUploadContent} />\n                <ContentList content={content} />\n              </div>\n            )}\n          </>\n        )}\n\n        {!user && !showLogin && !showRegister && (\n          <div className=\"WelcomeSection\" style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            minHeight: '60vh',\n            background: 'linear-gradient(135deg, #1976d2 0%, #64b5f6 100%)',\n            color: '#fff',\n            borderRadius: '16px',\n            boxShadow: '0 8px 32px rgba(25, 118, 210, 0.2)',\n            padding: '48px 24px',\n            margin: '32px auto',\n            maxWidth: '500px',\n          }}>\n            <img src=\"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\" alt=\"AutoPromote Logo\" style={{ width: 80, marginBottom: 24 }} />\n            <h2 style={{ fontSize: '2.5rem', fontWeight: 700, marginBottom: 16 }}>Welcome to AutoPromote</h2>\n            <p style={{ fontSize: '1.2rem', marginBottom: 32, textAlign: 'center', maxWidth: 400 }}>\n              <span style={{ fontWeight: 500 }}>AI-powered platform</span> for content promotion and monetization.<br />\n              Grow your audience, boost your revenue, and automate your success.\n            </p>\n            <button \n              onClick={() => setShowRegister(true)}\n              style={{\n                background: '#fff',\n                color: '#1976d2',\n                fontWeight: 600,\n                fontSize: '1.1rem',\n                padding: '12px 32px',\n                borderRadius: '8px',\n                border: 'none',\n                boxShadow: '0 2px 8px rgba(25, 118, 210, 0.15)',\n                cursor: 'pointer',\n                transition: 'background 0.2s',\n              }}\n              onMouseOver={e => e.target.style.background = '#e3f2fd'}\n              onMouseOut={e => e.target.style.background = '#fff'}\n            >\n              Get Started\n            </button>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\n// ...LoginForm, RegisterForm, ContentUploadForm, ContentList, AdminDashboard remain unchanged...\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}