{"ast":null,"code":"import _objectSpread from\"C:/Users/Tulani.Mtshwelo/Promo/AutoPromote/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useCallback}from'react';import{signInWithEmailAndPassword}from'firebase/auth';import{auth}from'./firebaseClient';import{API_ENDPOINTS}from'./config';import'./Auth.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AdminLoginForm=_ref=>{let{onLogin}=_ref;const[formData,setFormData]=useState({email:'admin@autopromote.com',password:''});const[error,setError]=useState('');const[isLoading,setIsLoading]=useState(false);const handleChange=useCallback(e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));if(error)setError('');},[error]);const handleSubmit=async e=>{e.preventDefault();setError('');setIsLoading(true);try{const{email,password}=formData;console.log('Attempting admin login with:',email);// Sign in with Firebase Authentication\nconst userCredential=await signInWithEmailAndPassword(auth,email,password);const{user}=userCredential;console.log('Firebase admin auth successful, getting ID token...');// Get the ID token\nconst idToken=await user.getIdToken(true);// Force refresh the token to ensure it's up-to-date\n// Use the API_ENDPOINTS from config.js\nconsole.log('Using API endpoint for admin login:',API_ENDPOINTS.ADMIN_LOGIN);try{const response=await fetch(API_ENDPOINTS.ADMIN_LOGIN,{method:'POST',headers:{'Content-Type':'application/json','Accept':'application/json','Origin':window.location.origin},body:JSON.stringify({idToken,email:email,isAdminLogin:true})});if(!response.ok){const errorData=await response.json();console.error('Admin login server response:',{status:response.status,statusText:response.statusText,error:errorData});throw new Error(errorData.error||'Admin authentication failed');}const data=await response.json();// Verify this is actually an admin user\nif(!data.user.isAdmin&&data.user.role!=='admin'){throw new Error('Not authorized as admin');}// Pass user info to parent component\nonLogin({email:data.user.email,uid:data.user.uid,role:'admin',isAdmin:true,name:data.user.name,token:data.token,fromCollection:data.user.fromCollection||'admins'});}catch(fetchError){console.error('API fetch error:',fetchError);throw new Error(\"Failed to connect to server: \".concat(fetchError.message));}}catch(error){console.error('Admin login error:',error);console.error('Error details:',{code:error.code,message:error.message,fullError:JSON.stringify(error,null,2)});let errorMessage='Admin login failed. ';if(error.message&&error.message.includes('Failed to connect to server')){errorMessage+='Cannot connect to the server. Please ensure the backend server is running on port 5000.';}else{switch(error.code){case'auth/invalid-credential':errorMessage+='Invalid admin email or password.';break;case'auth/user-not-found':errorMessage+='No admin account exists with this email.';break;case'auth/wrong-password':errorMessage+='Incorrect admin password.';break;case'auth/invalid-api-key':errorMessage+='Invalid Firebase configuration. Please check the setup.';break;case'auth/network-request-failed':errorMessage+='Network error. Please check your connection.';break;default:errorMessage+=\"\".concat(error.message);}}setError(errorMessage);}finally{setIsLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"auth-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"auth-form\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"auth-title\",children:\"Admin Login\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Admin Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,className:\"form-input\",placeholder:\"Enter admin email\",required:true,autoComplete:\"email\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Admin Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange,required:true,autoComplete:\"current-password\",placeholder:\"Enter admin password\",className:\"form-input\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading,className:\"auth-button\",style:{backgroundColor:'#d32f2f'}// Different color for admin login\n,children:isLoading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"loading-spinner\"}),\"Signing in as Admin...\"]}):'Sign In as Admin'}),/*#__PURE__*/_jsxs(\"div\",{className:\"admin-login-help\",style:{marginTop:'15px',fontSize:'14px',color:'#666'},children:[/*#__PURE__*/_jsx(\"p\",{children:\"Default admin credentials:\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Email: admin@autopromote.com\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Password: AdminPassword123!\"})]}),/*#__PURE__*/_jsx(\"a\",{href:\"#\",onClick:()=>window.location.reload(),className:\"auth-link\",children:\"Go to user login\"})]})});};export default AdminLoginForm;","map":{"version":3,"names":["React","useState","useCallback","signInWithEmailAndPassword","auth","API_ENDPOINTS","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdminLoginForm","_ref","onLogin","formData","setFormData","email","password","error","setError","isLoading","setIsLoading","handleChange","e","name","value","target","prev","_objectSpread","handleSubmit","preventDefault","console","log","userCredential","user","idToken","getIdToken","ADMIN_LOGIN","response","fetch","method","headers","window","location","origin","body","JSON","stringify","isAdminLogin","ok","errorData","json","status","statusText","Error","data","isAdmin","role","uid","token","fromCollection","fetchError","concat","message","code","fullError","errorMessage","includes","className","children","onSubmit","type","onChange","placeholder","required","autoComplete","disabled","style","backgroundColor","marginTop","fontSize","color","href","onClick","reload"],"sources":["C:/Users/Tulani.Mtshwelo/Promo/AutoPromote/frontend/src/AdminLoginForm.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from './firebaseClient';\r\nimport { API_ENDPOINTS } from './config';\r\nimport './Auth.css';\r\n\r\nconst AdminLoginForm = ({ onLogin }) => {\r\n  const [formData, setFormData] = useState({ email: 'admin@autopromote.com', password: '' });\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  const handleChange = useCallback((e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    if (error) setError('');\r\n  }, [error]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const { email, password } = formData;\r\n      \r\n      console.log('Attempting admin login with:', email);\r\n      \r\n      // Sign in with Firebase Authentication\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const { user } = userCredential;\r\n\r\n      console.log('Firebase admin auth successful, getting ID token...');\r\n      \r\n      // Get the ID token\r\n      const idToken = await user.getIdToken(true);  // Force refresh the token to ensure it's up-to-date\r\n\r\n      // Use the API_ENDPOINTS from config.js\r\n      console.log('Using API endpoint for admin login:', API_ENDPOINTS.ADMIN_LOGIN);\r\n      \r\n      try {\r\n        const response = await fetch(API_ENDPOINTS.ADMIN_LOGIN, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Origin': window.location.origin\r\n          },\r\n          body: JSON.stringify({ \r\n            idToken,\r\n            email: email,\r\n            isAdminLogin: true\r\n          })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          console.error('Admin login server response:', {\r\n            status: response.status,\r\n            statusText: response.statusText,\r\n            error: errorData\r\n          });\r\n          throw new Error(errorData.error || 'Admin authentication failed');\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        // Verify this is actually an admin user\r\n        if (!data.user.isAdmin && data.user.role !== 'admin') {\r\n          throw new Error('Not authorized as admin');\r\n        }\r\n        \r\n        // Pass user info to parent component\r\n        onLogin({\r\n          email: data.user.email,\r\n          uid: data.user.uid,\r\n          role: 'admin',\r\n          isAdmin: true,\r\n          name: data.user.name,\r\n          token: data.token,\r\n          fromCollection: data.user.fromCollection || 'admins'\r\n        });\r\n      } catch (fetchError) {\r\n        console.error('API fetch error:', fetchError);\r\n        throw new Error(`Failed to connect to server: ${fetchError.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Admin login error:', error);\r\n      console.error('Error details:', {\r\n        code: error.code,\r\n        message: error.message,\r\n        fullError: JSON.stringify(error, null, 2)\r\n      });\r\n      \r\n      let errorMessage = 'Admin login failed. ';\r\n      \r\n      if (error.message && error.message.includes('Failed to connect to server')) {\r\n        errorMessage += 'Cannot connect to the server. Please ensure the backend server is running on port 5000.';\r\n      } else {\r\n        switch (error.code) {\r\n          case 'auth/invalid-credential':\r\n            errorMessage += 'Invalid admin email or password.';\r\n            break;\r\n          case 'auth/user-not-found':\r\n            errorMessage += 'No admin account exists with this email.';\r\n            break;\r\n          case 'auth/wrong-password':\r\n            errorMessage += 'Incorrect admin password.';\r\n            break;\r\n          case 'auth/invalid-api-key':\r\n            errorMessage += 'Invalid Firebase configuration. Please check the setup.';\r\n            break;\r\n          case 'auth/network-request-failed':\r\n            errorMessage += 'Network error. Please check your connection.';\r\n            break;\r\n          default:\r\n            errorMessage += `${error.message}`;\r\n        }\r\n      }\r\n      \r\n      setError(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <form onSubmit={handleSubmit} className=\"auth-form\">\r\n        <h2 className=\"auth-title\">Admin Login</h2>\r\n        {error && (\r\n          <div className=\"error-message\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Admin Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className=\"form-input\"\r\n            placeholder=\"Enter admin email\"\r\n            required\r\n            autoComplete=\"email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Admin Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            required\r\n            autoComplete=\"current-password\"\r\n            placeholder=\"Enter admin password\"\r\n            className=\"form-input\"\r\n          />\r\n        </div>\r\n\r\n        <button \r\n          type=\"submit\" \r\n          disabled={isLoading}\r\n          className=\"auth-button\"\r\n          style={{ backgroundColor: '#d32f2f' }} // Different color for admin login\r\n        >\r\n          {isLoading ? (\r\n            <>\r\n              <span className=\"loading-spinner\"></span>\r\n              Signing in as Admin...\r\n            </>\r\n          ) : (\r\n            'Sign In as Admin'\r\n          )}\r\n        </button>\r\n        \r\n        <div className=\"admin-login-help\" style={{ marginTop: '15px', fontSize: '14px', color: '#666' }}>\r\n          <p>Default admin credentials:</p>\r\n          <p>Email: admin@autopromote.com</p>\r\n          <p>Password: AdminPassword123!</p>\r\n        </div>\r\n\r\n        <a href=\"#\" onClick={() => window.location.reload()} className=\"auth-link\">\r\n          Go to user login\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}