{"ast":null,"code":"import _objectSpread from\"C:/Users/Tulani.Mtshwelo/Promo/AutoPromote/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import'./App.css';import{auth,db,storage}from'./firebaseClient';import{onAuthStateChanged,signInWithEmailAndPassword,createUserWithEmailAndPassword,updateProfile}from'firebase/auth';import{ref,uploadBytes,getDownloadURL}from'firebase/storage';import{API_ENDPOINTS}from'./config';import LoginForm from'./LoginForm';import AdminLoginForm from'./AdminLoginForm';import RegisterForm from'./RegisterForm';import ContentUploadForm from'./ContentUploadForm';import ContentList from'./ContentList';import AdminDashboard from'./AdminDashboard';import EnvTest from'./components/EnvTest';import EnvChecker from'./components/EnvChecker';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[user,setUser]=useState(()=>{const stored=localStorage.getItem('user');return stored?JSON.parse(stored):null;});const[content,setContent]=useState([]);const[showLogin,setShowLogin]=useState(false);const[showAdminLogin,setShowAdminLogin]=useState(false);const[showRegister,setShowRegister]=useState(false);const[isAdmin,setIsAdmin]=useState(false);const[analytics,setAnalytics]=useState(null);// Authentication listener\nuseEffect(()=>{const unsubscribe=onAuthStateChanged(auth,async firebaseUser=>{if(!firebaseUser){// User is signed out of Firebase\nhandleLogout();return;}try{// Get a fresh token\nconst token=await firebaseUser.getIdToken(true);// Get the latest claims\nconst idTokenResult=await firebaseUser.getIdTokenResult(true);const hasAdminClaim=idTokenResult.claims.admin===true||idTokenResult.claims.role==='admin';// Check for stored user data\nconst storedUser=localStorage.getItem('user');const userData=storedUser?JSON.parse(storedUser):null;if(userData&&userData.email===firebaseUser.email){// Update the token and admin status in the stored data\nuserData.token=token;userData.isAdmin=hasAdminClaim;userData.role=hasAdminClaim?'admin':userData.role;localStorage.setItem('user',JSON.stringify(userData));setUser(userData);setIsAdmin(hasAdminClaim||userData.role==='admin');console.log('Updated user state with new token and claims:',{email:userData.email,role:userData.role,isAdmin:hasAdminClaim});}console.log('Firebase auth state changed:',firebaseUser.email,'Admin:',hasAdminClaim);}catch(error){console.error('Error refreshing token:',error);handleLogout();}});// Check if we need to show admin login form based on URL\nif(window.location.pathname==='/admin-login'){setShowAdminLogin(true);setShowLogin(false);setShowRegister(false);}// Cleanup subscription\nreturn()=>unsubscribe();},[]);useEffect(()=>{if(user){setIsAdmin(user.role==='admin');// If we have a user but need a fresh token\nconst getTokenAndFetchData=async()=>{try{// Get a fresh token directly from Firebase\nconst currentUser=auth.currentUser;if(!currentUser){console.log('No Firebase user available, using stored token');return;}const freshToken=await currentUser.getIdToken(true);console.log('Got fresh token from Firebase, length:',freshToken.length);// Store the fresh token\nconst updatedUserData=_objectSpread(_objectSpread({},user),{},{token:freshToken});localStorage.setItem('user',JSON.stringify(updatedUserData));setUser(updatedUserData);// Fetch data with the fresh token\nif(user.role==='admin'){fetchAnalytics(freshToken);}else{fetchUserContent(freshToken);}}catch(err){console.error('Error getting fresh token:',err);}};getTokenAndFetchData();}// eslint-disable-next-line\n},[user]);const fetchUserContent=async function(){let providedToken=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;try{// Get the best token we can\nlet token=providedToken;if(!token){// If no token provided, try to get a fresh one from Firebase\nconst currentUser=auth.currentUser;if(currentUser){token=await currentUser.getIdToken(true);console.log('Generated fresh token for content fetch, length:',token.length);}else if(user&&user.token){token=user.token;console.log('Using stored token for content fetch, length:',token.length);}else{console.log('No user or token available');return;}}console.log('Fetching user content with token');// Try remote API\ntry{var _data$content;const res=await fetch(API_ENDPOINTS.MY_CONTENT,{method:'GET',headers:{'Authorization':\"Bearer \".concat(token),'Content-Type':'application/json','Accept':'application/json'},mode:'cors'});console.log('Content fetch response status:',res.status);if(!res.ok){if(res.status===401){console.error('Content fetch authentication failed:',await res.text());// Try to refresh token and retry once\nif(!providedToken&&auth.currentUser){console.log('Token failed, trying with a fresh one...');const freshToken=await auth.currentUser.getIdToken(true);return fetchUserContent(freshToken);}alert('Authentication failed. Please try logging in again.');return;}console.error('Failed to fetch content:',res.status);return;}const data=await res.json();console.log('User content fetched successfully, items:',((_data$content=data.content)===null||_data$content===void 0?void 0:_data$content.length)||0);setContent(data.content||[]);}catch(error){console.error('Content fetch API failed:',error);}}catch(error){console.error('Failed to fetch content:',error);}};const fetchAnalytics=async function(){let providedToken=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;// Get the best token we can\nlet token=providedToken;if(!token){// If no token provided, try to get a fresh one from Firebase\nconst currentUser=auth.currentUser;if(currentUser){token=await currentUser.getIdToken(true);console.log('Generated fresh token for analytics fetch, length:',token.length);}else if(user&&user.token){token=user.token;console.log('Using stored token for analytics fetch, length:',token.length);}else{console.log('No user or token available for analytics');return;}}// Check admin status again to be sure\nconst isAdminUser=user.role==='admin'||user.isAdmin===true;if(!isAdminUser){console.error('Non-admin user attempting to fetch analytics');return;}try{console.log('Fetching admin analytics with token');// Try remote endpoint directly\ntry{const res=await fetch(API_ENDPOINTS.ADMIN_ANALYTICS,{method:'GET',headers:{'Authorization':\"Bearer \".concat(token),'Content-Type':'application/json','Accept':'application/json'}});console.log('Analytics API response status:',res.status);if(!res.ok){if(res.status===401){console.error('Admin authentication failed:',await res.text());// Try to refresh token and retry once\nif(!providedToken&&auth.currentUser){console.log('Token failed, trying with a fresh one...');const freshToken=await auth.currentUser.getIdToken(true);return fetchAnalytics(freshToken);}// If retried with fresh token and still failed, user might not be admin\nsetIsAdmin(false);return;}console.error('Failed to fetch analytics:',res.status);return;}const data=await res.json();console.log('Analytics data received:',Object.keys(data).length,'fields');setAnalytics(data);}catch(error){console.error('Analytics API failed:',error);}}catch(error){console.error('Error in fetchAnalytics:',error);}};const loginUser=async(email,password)=>{try{// Sign in with Firebase\nconst userCredential=await signInWithEmailAndPassword(auth,email,password);const{user:firebaseUser}=userCredential;// Get the ID token\nconst idToken=await firebaseUser.getIdToken();console.log('Firebase ID token length:',idToken.length);// Verify token with our backend\nconst res=await fetch(API_ENDPOINTS.LOGIN,{method:'POST',headers:{'Content-Type':'application/json','Accept':'application/json'},body:JSON.stringify({idToken})});if(res.ok){const data=await res.json();// Use the idToken directly instead of the one from the server\n// This ensures we're using the full Firebase ID token\nhandleLogin(_objectSpread(_objectSpread({},data.user),{},{token:idToken// Use the original Firebase token\n}));}else{const error=await res.json();throw new Error(error.message||'Login failed');}}catch(error){console.error('Login error:',error);alert(error.message||'Login failed');}};const registerUser=async(name,email,password)=>{try{console.log('Starting registration process for:',email);// First register with Firebase\nconst userCredential=await createUserWithEmailAndPassword(auth,email,password);const firebaseUser=userCredential.user;// Update the profile with the name\nawait updateProfile(firebaseUser,{displayName:name});// Get a token for the backend call\nconst idToken=await firebaseUser.getIdToken();console.log('Firebase registration successful, token length:',idToken.length);// Now register with our backend to create additional user data\nconst res=await fetch(API_ENDPOINTS.REGISTER,{method:'POST',headers:{'Content-Type':'application/json','Accept':'application/json','Authorization':\"Bearer \".concat(idToken)},body:JSON.stringify({name,email,uid:firebaseUser.uid,idToken})});if(res.ok){const data=await res.json();// Use the Firebase token for authentication\nhandleRegister(_objectSpread(_objectSpread({},data.user),{},{token:idToken,// Use the Firebase token, not the one from the server\nuid:firebaseUser.uid}));alert('Registration successful! You are now logged in.');}else{const errorData=await res.text();console.error('Backend registration failed:',errorData);// Even if backend registration fails, we can still log in with the Firebase user\nhandleRegister({uid:firebaseUser.uid,email:email,name:name,token:idToken,role:'user'});alert('Registration partially successful. Some features may be limited.');}}catch(error){console.error('Registration error:',error);// Provide more specific error messages based on Firebase error codes\nif(error.code==='auth/email-already-in-use'){alert('Email is already in use. Please use a different email or try logging in.');}else if(error.code==='auth/invalid-email'){alert('Invalid email address. Please check and try again.');}else if(error.code==='auth/weak-password'){alert('Password is too weak. Please use a stronger password (at least 6 characters).');}else{alert('Registration failed: '+(error.message||'Unknown error'));}}};const handleLogin=async userData=>{try{// Clear any existing data\nlocalStorage.clear();// Ensure we have a token\nif(!userData.token){console.error('No token provided in user data');return;}// Log token info for debugging\nconsole.log('Token received, length:',userData.token.length);// Check for admin status from various sources\nconst isAdminRole=userData.role==='admin';const hasAdminClaim=userData.isAdmin===true;const isAdminUser=isAdminRole||hasAdminClaim;// Log the authentication data\nconsole.log('Logging in user:',{email:userData.email,role:userData.role,isAdmin:isAdminUser,hasToken:Boolean(userData.token),tokenLength:userData.token.length});// Update the user data with definitive admin status\nconst updatedUserData=_objectSpread(_objectSpread({},userData),{},{role:isAdminUser?'admin':userData.role,isAdmin:isAdminUser});// Store the complete user data\nlocalStorage.setItem('user',JSON.stringify(updatedUserData));// Update the state\nsetUser(updatedUserData);setIsAdmin(isAdminUser);setShowLogin(false);console.log('Login successful:',updatedUserData.role,'IsAdmin:',isAdminUser);// Fetch data based on user role\nif(isAdminUser){await fetchAnalytics();}else{await fetchUserContent();}}catch(error){console.error('Error during login:',error);handleLogout();}};const handleRegister=userData=>{setUser(userData);setShowRegister(false);};const handleLogout=async()=>{try{// Sign out from Firebase\nawait auth.signOut();// Clear local state\nsetUser(null);setContent([]);setAnalytics(null);setIsAdmin(false);// Clear local storage\nlocalStorage.removeItem('user');localStorage.removeItem('token');localStorage.removeItem('adminToken');}catch(error){console.error('Logout error:',error);}};// Firebase Storage upload with improved token handling\nconst handleUploadContent=async contentData=>{let retryCount=0;const maxRetries=2;const upload=async()=>{try{let url='';if(contentData.type==='article'){url=contentData.articleText||'';}else{const file=contentData.file;if(!file){alert('No file selected!');return;}console.log('Uploading file:',file);if(file.size>50*1024*1024){alert('File is too large. Max 50MB allowed.');return;}const currentUser=auth.currentUser;if(!currentUser){throw new Error('No authenticated user found');}const filePath=\"content/\".concat(Date.now(),\"_\").concat(file.name);const storageRef=ref(storage,filePath);console.log('Starting file upload to:',filePath);const uploadResult=await uploadBytes(storageRef,file);console.log('Upload completed:',uploadResult);url=await getDownloadURL(storageRef);console.log('Download URL obtained:',url);if(!url){alert('Could not get download URL for uploaded file.');return;}}const payload={title:contentData.title,type:contentData.type,url,description:contentData.description||''};// Ensure we have a fresh token for API call\nconst firebaseUser=auth.currentUser;if(!firebaseUser){throw new Error('User not authenticated for API call');}console.log('Getting fresh token for API call...');const freshToken=await firebaseUser.getIdToken(true);console.log('Fresh token obtained, length:',freshToken.length);console.log('Uploading content with fresh token');let res=null;let error=null;// Try local endpoint first\ntry{console.log('Attempting local upload...');res=await fetch('http://localhost:5000/api/content/upload',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(freshToken),'Accept':'application/json','Origin':'http://localhost:3000'},body:JSON.stringify(payload)});console.log('Local content upload response status:',res.status);// If local returns 401, try to get a completely fresh token\nif(res.status===401){console.log('Local auth failed, getting completely fresh token...');const completelyFreshToken=await firebaseUser.getIdToken(true);console.log('Completely fresh token obtained');res=await fetch('http://localhost:5000/api/content/upload',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(completelyFreshToken),'Accept':'application/json','Origin':'http://localhost:3000'},body:JSON.stringify(payload)});console.log('Retry local content upload response status:',res.status);}}catch(localError){console.warn('Local content upload API failed, trying remote:',localError);error=localError;}// If local fails or returns non-2xx, try remote\nif(!res||!res.ok){try{console.log('Attempting remote upload...');// Get another fresh token for remote call\nconst remoteFreshToken=await firebaseUser.getIdToken(true);res=await fetch(API_ENDPOINTS.CONTENT_UPLOAD,{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(remoteFreshToken),'Accept':'application/json'},body:JSON.stringify(payload)});console.log('Remote content upload response status:',res.status);}catch(remoteError){console.error('Remote content upload API also failed:',remoteError);error=error||remoteError;}}if(!res||!res.ok){if(res&&res.status===401){console.error('Content upload authentication failed:',await res.text());alert('Authentication failed. Please try logging in again.');return;}console.error('Failed to upload content:',res?res.status:'No response');const errorText=res?await res.text():'Network error';console.error('Error details:',errorText);alert(\"Failed to upload content: \".concat(errorText));return;}const result=await res.json();console.log('Content uploaded successfully:',result);alert('Content uploaded successfully!');// Refresh content list\nfetchUserContent();}catch(error){console.error('Error uploading content:',error);if(retryCount<maxRetries){retryCount++;console.log(\"Retrying upload (\".concat(retryCount,\"/\").concat(maxRetries,\")...\"));await upload();}else{alert('Error uploading content: '+error.message);}}};await upload();};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(EnvTest,{}),/*#__PURE__*/_jsx(EnvChecker,{}),/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"AutoPromote\"}),/*#__PURE__*/_jsx(\"nav\",{children:user?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Welcome, \",user.name,\"!\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"Logout\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowLogin(true);setShowRegister(false);setShowAdminLogin(false);},children:\"Login\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowRegister(true);setShowLogin(false);setShowAdminLogin(false);},children:\"Register\"})]})})]}),/*#__PURE__*/_jsxs(\"main\",{children:[showLogin&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(LoginForm,{onLogin:handleLogin,loginUser:loginUser})}),showAdminLogin&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(AdminLoginForm,{onLogin:handleLogin}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',margin:'15px 0'},children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowLogin(true);setShowRegister(false);setShowAdminLogin(false);},style:{background:'none',border:'none',color:'#1976d2',textDecoration:'underline',cursor:'pointer'},children:\"Back to Login\"})})]}),showRegister&&/*#__PURE__*/_jsx(RegisterForm,{registerUser:registerUser}),user&&/*#__PURE__*/_jsx(_Fragment,{children:isAdmin||user.role==='admin'||user.isAdmin===true?/*#__PURE__*/_jsx(AdminDashboard,{analytics:analytics,user:user}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ContentUploadForm,{onUpload:handleUploadContent}),/*#__PURE__*/_jsx(ContentList,{content:content})]})}),!user&&!showLogin&&!showRegister&&/*#__PURE__*/_jsxs(\"div\",{className:\"WelcomeSection\",style:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',minHeight:'60vh',background:'linear-gradient(135deg, #1976d2 0%, #64b5f6 100%)',color:'#fff',borderRadius:'16px',boxShadow:'0 8px 32px rgba(25, 118, 210, 0.2)',padding:'48px 24px',margin:'32px auto',maxWidth:'500px'},children:[/*#__PURE__*/_jsx(\"img\",{src:\"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\",alt:\"AutoPromote Logo\",style:{width:80,marginBottom:24}}),/*#__PURE__*/_jsx(\"h2\",{style:{fontSize:'2.5rem',fontWeight:700,marginBottom:16},children:\"Welcome to AutoPromote\"}),/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:'1.2rem',marginBottom:32,textAlign:'center',maxWidth:400},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:500},children:\"AI-powered platform\"}),\" for content promotion and monetization.\",/*#__PURE__*/_jsx(\"br\",{}),\"Grow your audience, boost your revenue, and automate your success.\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowRegister(true),style:{background:'#fff',color:'#1976d2',fontWeight:600,fontSize:'1.1rem',padding:'12px 32px',borderRadius:'8px',border:'none',boxShadow:'0 2px 8px rgba(25, 118, 210, 0.15)',cursor:'pointer',transition:'background 0.2s'},onMouseOver:e=>e.target.style.background='#e3f2fd',onMouseOut:e=>e.target.style.background='#fff',children:\"Get Started\"})]})]})]});}// ...LoginForm, RegisterForm, ContentUploadForm, ContentList, AdminDashboard remain unchanged...\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","auth","db","storage","onAuthStateChanged","signInWithEmailAndPassword","createUserWithEmailAndPassword","updateProfile","ref","uploadBytes","getDownloadURL","API_ENDPOINTS","LoginForm","AdminLoginForm","RegisterForm","ContentUploadForm","ContentList","AdminDashboard","EnvTest","EnvChecker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","user","setUser","stored","localStorage","getItem","JSON","parse","content","setContent","showLogin","setShowLogin","showAdminLogin","setShowAdminLogin","showRegister","setShowRegister","isAdmin","setIsAdmin","analytics","setAnalytics","unsubscribe","firebaseUser","handleLogout","token","getIdToken","idTokenResult","getIdTokenResult","hasAdminClaim","claims","admin","role","storedUser","userData","email","setItem","stringify","console","log","error","window","location","pathname","getTokenAndFetchData","currentUser","freshToken","length","updatedUserData","_objectSpread","fetchAnalytics","fetchUserContent","err","providedToken","arguments","undefined","_data$content","res","fetch","MY_CONTENT","method","headers","concat","mode","status","ok","text","alert","data","json","isAdminUser","ADMIN_ANALYTICS","Object","keys","loginUser","password","userCredential","idToken","LOGIN","body","handleLogin","Error","message","registerUser","name","displayName","REGISTER","uid","handleRegister","errorData","code","clear","isAdminRole","hasToken","Boolean","tokenLength","signOut","removeItem","handleUploadContent","contentData","retryCount","maxRetries","upload","url","type","articleText","file","size","filePath","Date","now","storageRef","uploadResult","payload","title","description","completelyFreshToken","localError","warn","remoteFreshToken","CONTENT_UPLOAD","remoteError","errorText","result","className","children","onClick","onLogin","style","textAlign","margin","background","border","color","textDecoration","cursor","onUpload","display","flexDirection","alignItems","justifyContent","minHeight","borderRadius","boxShadow","padding","maxWidth","src","alt","width","marginBottom","fontSize","fontWeight","transition","onMouseOver","e","target","onMouseOut"],"sources":["C:/Users/Tulani.Mtshwelo/Promo/AutoPromote/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { auth, db, storage } from './firebaseClient';\nimport { onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { API_ENDPOINTS } from './config';\nimport LoginForm from './LoginForm';\nimport AdminLoginForm from './AdminLoginForm';\nimport RegisterForm from './RegisterForm';\nimport ContentUploadForm from './ContentUploadForm';\nimport ContentList from './ContentList';\nimport AdminDashboard from './AdminDashboard';\nimport EnvTest from './components/EnvTest';\nimport EnvChecker from './components/EnvChecker';\n\nfunction App() {\n  const [user, setUser] = useState(() => {\n    const stored = localStorage.getItem('user');\n    return stored ? JSON.parse(stored) : null;\n  });\n  const [content, setContent] = useState([]);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showAdminLogin, setShowAdminLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [analytics, setAnalytics] = useState(null);\n\n  // Authentication listener\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\n      if (!firebaseUser) {\n        // User is signed out of Firebase\n        handleLogout();\n        return;\n      }\n\n      try {\n        // Get a fresh token\n        const token = await firebaseUser.getIdToken(true);\n        \n        // Get the latest claims\n        const idTokenResult = await firebaseUser.getIdTokenResult(true);\n        const hasAdminClaim = idTokenResult.claims.admin === true || idTokenResult.claims.role === 'admin';\n        \n        // Check for stored user data\n        const storedUser = localStorage.getItem('user');\n        const userData = storedUser ? JSON.parse(storedUser) : null;\n        \n        if (userData && userData.email === firebaseUser.email) {\n          // Update the token and admin status in the stored data\n          userData.token = token;\n          userData.isAdmin = hasAdminClaim;\n          userData.role = hasAdminClaim ? 'admin' : userData.role;\n          \n          localStorage.setItem('user', JSON.stringify(userData));\n          setUser(userData);\n          setIsAdmin(hasAdminClaim || userData.role === 'admin');\n          \n          console.log('Updated user state with new token and claims:', {\n            email: userData.email,\n            role: userData.role,\n            isAdmin: hasAdminClaim\n          });\n        }\n\n        console.log('Firebase auth state changed:', firebaseUser.email, 'Admin:', hasAdminClaim);\n      } catch (error) {\n        console.error('Error refreshing token:', error);\n        handleLogout();\n      }\n    });\n\n    // Check if we need to show admin login form based on URL\n    if (window.location.pathname === '/admin-login') {\n      setShowAdminLogin(true);\n      setShowLogin(false);\n      setShowRegister(false);\n    }\n\n    // Cleanup subscription\n    return () => unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      setIsAdmin(user.role === 'admin');\n      \n      // If we have a user but need a fresh token\n      const getTokenAndFetchData = async () => {\n        try {\n          // Get a fresh token directly from Firebase\n          const currentUser = auth.currentUser;\n          if (!currentUser) {\n            console.log('No Firebase user available, using stored token');\n            return;\n          }\n          \n          const freshToken = await currentUser.getIdToken(true);\n          console.log('Got fresh token from Firebase, length:', freshToken.length);\n          \n          // Store the fresh token\n          const updatedUserData = {\n            ...user,\n            token: freshToken\n          };\n          localStorage.setItem('user', JSON.stringify(updatedUserData));\n          setUser(updatedUserData);\n          \n          // Fetch data with the fresh token\n          if (user.role === 'admin') {\n            fetchAnalytics(freshToken);\n          } else {\n            fetchUserContent(freshToken);\n          }\n        } catch (err) {\n          console.error('Error getting fresh token:', err);\n        }\n      };\n      \n      getTokenAndFetchData();\n    }\n    // eslint-disable-next-line\n  }, [user]);\n\n  const fetchUserContent = async (providedToken = null) => {\n    try {\n      // Get the best token we can\n      let token = providedToken;\n      \n      if (!token) {\n        // If no token provided, try to get a fresh one from Firebase\n        const currentUser = auth.currentUser;\n        if (currentUser) {\n          token = await currentUser.getIdToken(true);\n          console.log('Generated fresh token for content fetch, length:', token.length);\n        } else if (user && user.token) {\n          token = user.token;\n          console.log('Using stored token for content fetch, length:', token.length);\n        } else {\n          console.log('No user or token available');\n          return;\n        }\n      }\n\n      console.log('Fetching user content with token');\n\n      // Try remote API\n      try {\n        const res = await fetch(API_ENDPOINTS.MY_CONTENT, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          mode: 'cors'\n        });\n        \n        console.log('Content fetch response status:', res.status);\n\n        if (!res.ok) {\n          if (res.status === 401) {\n            console.error('Content fetch authentication failed:', await res.text());\n            // Try to refresh token and retry once\n            if (!providedToken && auth.currentUser) {\n              console.log('Token failed, trying with a fresh one...');\n              const freshToken = await auth.currentUser.getIdToken(true);\n              return fetchUserContent(freshToken);\n            }\n            alert('Authentication failed. Please try logging in again.');\n            return;\n          }\n\n          console.error('Failed to fetch content:', res.status);\n          return;\n        }\n\n        const data = await res.json();\n        console.log('User content fetched successfully, items:', data.content?.length || 0);\n        setContent(data.content || []);\n      } catch (error) {\n        console.error('Content fetch API failed:', error);\n      }\n    } catch (error) {\n      console.error('Failed to fetch content:', error);\n    }\n  };\n\n  const fetchAnalytics = async (providedToken = null) => {\n    // Get the best token we can\n    let token = providedToken;\n    \n    if (!token) {\n      // If no token provided, try to get a fresh one from Firebase\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        token = await currentUser.getIdToken(true);\n        console.log('Generated fresh token for analytics fetch, length:', token.length);\n      } else if (user && user.token) {\n        token = user.token;\n        console.log('Using stored token for analytics fetch, length:', token.length);\n      } else {\n        console.log('No user or token available for analytics');\n        return;\n      }\n    }\n    \n    // Check admin status again to be sure\n    const isAdminUser = user.role === 'admin' || user.isAdmin === true;\n    if (!isAdminUser) {\n      console.error('Non-admin user attempting to fetch analytics');\n      return;\n    }\n    \n    try {\n      console.log('Fetching admin analytics with token');\n      \n      // Try remote endpoint directly\n      try {\n        const res = await fetch(API_ENDPOINTS.ADMIN_ANALYTICS, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        });\n        \n        console.log('Analytics API response status:', res.status);\n        \n        if (!res.ok) {\n          if (res.status === 401) {\n            console.error('Admin authentication failed:', await res.text());\n            \n            // Try to refresh token and retry once\n            if (!providedToken && auth.currentUser) {\n              console.log('Token failed, trying with a fresh one...');\n              const freshToken = await auth.currentUser.getIdToken(true);\n              return fetchAnalytics(freshToken);\n            }\n            \n            // If retried with fresh token and still failed, user might not be admin\n            setIsAdmin(false);\n            return;\n          }\n          \n          console.error('Failed to fetch analytics:', res.status);\n          return;\n        }\n        \n        const data = await res.json();\n        console.log('Analytics data received:', Object.keys(data).length, 'fields');\n        setAnalytics(data);\n      } catch (error) {\n        console.error('Analytics API failed:', error);\n      }\n    } catch (error) {\n      console.error('Error in fetchAnalytics:', error);\n    }\n  };\n\n  const loginUser = async (email, password) => {\n    try {\n      // Sign in with Firebase\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const { user: firebaseUser } = userCredential;\n\n      // Get the ID token\n      const idToken = await firebaseUser.getIdToken();\n      console.log('Firebase ID token length:', idToken.length);\n\n      // Verify token with our backend\n      const res = await fetch(API_ENDPOINTS.LOGIN, {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({ idToken }),\n      });\n\n      if (res.ok) {\n        const data = await res.json();\n        // Use the idToken directly instead of the one from the server\n        // This ensures we're using the full Firebase ID token\n        handleLogin({\n          ...data.user,\n          token: idToken // Use the original Firebase token\n        });\n      } else {\n        const error = await res.json();\n        throw new Error(error.message || 'Login failed');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      alert(error.message || 'Login failed');\n    }\n  };\n\n  const registerUser = async (name, email, password) => {\n    try {\n      console.log('Starting registration process for:', email);\n      \n      // First register with Firebase\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const firebaseUser = userCredential.user;\n      \n      // Update the profile with the name\n      await updateProfile(firebaseUser, { displayName: name });\n      \n      // Get a token for the backend call\n      const idToken = await firebaseUser.getIdToken();\n      console.log('Firebase registration successful, token length:', idToken.length);\n      \n      // Now register with our backend to create additional user data\n      const res = await fetch(API_ENDPOINTS.REGISTER, {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${idToken}`\n        },\n        body: JSON.stringify({ \n          name, \n          email, \n          uid: firebaseUser.uid,\n          idToken \n        }),\n      });\n      \n      if (res.ok) {\n        const data = await res.json();\n        // Use the Firebase token for authentication\n        handleRegister({ \n          ...data.user, \n          token: idToken,  // Use the Firebase token, not the one from the server\n          uid: firebaseUser.uid\n        });\n        alert('Registration successful! You are now logged in.');\n      } else {\n        const errorData = await res.text();\n        console.error('Backend registration failed:', errorData);\n        \n        // Even if backend registration fails, we can still log in with the Firebase user\n        handleRegister({ \n          uid: firebaseUser.uid,\n          email: email,\n          name: name,\n          token: idToken,\n          role: 'user'\n        });\n        alert('Registration partially successful. Some features may be limited.');\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      \n      // Provide more specific error messages based on Firebase error codes\n      if (error.code === 'auth/email-already-in-use') {\n        alert('Email is already in use. Please use a different email or try logging in.');\n      } else if (error.code === 'auth/invalid-email') {\n        alert('Invalid email address. Please check and try again.');\n      } else if (error.code === 'auth/weak-password') {\n        alert('Password is too weak. Please use a stronger password (at least 6 characters).');\n      } else {\n        alert('Registration failed: ' + (error.message || 'Unknown error'));\n      }\n    }\n  };\n\n  const handleLogin = async (userData) => {\n    try {\n      // Clear any existing data\n      localStorage.clear();\n      \n      // Ensure we have a token\n      if (!userData.token) {\n        console.error('No token provided in user data');\n        return;\n      }\n      \n      // Log token info for debugging\n      console.log('Token received, length:', userData.token.length);\n      \n      // Check for admin status from various sources\n      const isAdminRole = userData.role === 'admin';\n      const hasAdminClaim = userData.isAdmin === true;\n      const isAdminUser = isAdminRole || hasAdminClaim;\n      \n      // Log the authentication data\n      console.log('Logging in user:', {\n        email: userData.email,\n        role: userData.role,\n        isAdmin: isAdminUser,\n        hasToken: Boolean(userData.token),\n        tokenLength: userData.token.length\n      });\n      \n      // Update the user data with definitive admin status\n      const updatedUserData = {\n        ...userData,\n        role: isAdminUser ? 'admin' : userData.role,\n        isAdmin: isAdminUser\n      };\n      \n      // Store the complete user data\n      localStorage.setItem('user', JSON.stringify(updatedUserData));\n      \n      // Update the state\n      setUser(updatedUserData);\n      setIsAdmin(isAdminUser);\n      setShowLogin(false);\n      \n      console.log('Login successful:', updatedUserData.role, 'IsAdmin:', isAdminUser);\n      \n      // Fetch data based on user role\n      if (isAdminUser) {\n        await fetchAnalytics();\n      } else {\n        await fetchUserContent();\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      handleLogout();\n    }\n  };\n\n  const handleRegister = (userData) => {\n    setUser(userData);\n    setShowRegister(false);\n  };\n\n  const handleLogout = async () => {\n    try {\n      // Sign out from Firebase\n      await auth.signOut();\n      \n      // Clear local state\n      setUser(null);\n      setContent([]);\n      setAnalytics(null);\n      setIsAdmin(false);\n      \n      // Clear local storage\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      localStorage.removeItem('adminToken');\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  // Firebase Storage upload with improved token handling\n  const handleUploadContent = async (contentData) => {\n    let retryCount = 0;\n    const maxRetries = 2;\n\n    const upload = async () => {\n      try {\n        let url = '';\n        if (contentData.type === 'article') {\n          url = contentData.articleText || '';\n        } else {\n          const file = contentData.file;\n          if (!file) {\n            alert('No file selected!');\n            return;\n          }\n\n          console.log('Uploading file:', file);\n\n          if (file.size > 50 * 1024 * 1024) {\n            alert('File is too large. Max 50MB allowed.');\n            return;\n          }\n\n          const currentUser = auth.currentUser;\n          if (!currentUser) {\n            throw new Error('No authenticated user found');\n          }\n\n          const filePath = `content/${Date.now()}_${file.name}`;\n          const storageRef = ref(storage, filePath);\n\n          console.log('Starting file upload to:', filePath);\n\n          const uploadResult = await uploadBytes(storageRef, file);\n          console.log('Upload completed:', uploadResult);\n\n          url = await getDownloadURL(storageRef);\n          console.log('Download URL obtained:', url);\n\n          if (!url) {\n            alert('Could not get download URL for uploaded file.');\n            return;\n          }\n        }\n\n        const payload = {\n          title: contentData.title,\n          type: contentData.type,\n          url,\n          description: contentData.description || '',\n        };\n\n        // Ensure we have a fresh token for API call\n        const firebaseUser = auth.currentUser;\n        if (!firebaseUser) {\n          throw new Error('User not authenticated for API call');\n        }\n\n        console.log('Getting fresh token for API call...');\n        const freshToken = await firebaseUser.getIdToken(true);\n        console.log('Fresh token obtained, length:', freshToken.length);\n\n        console.log('Uploading content with fresh token');\n\n        let res = null;\n        let error = null;\n\n        // Try local endpoint first\n        try {\n          console.log('Attempting local upload...');\n          res = await fetch('http://localhost:5000/api/content/upload', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${freshToken}`,\n              'Accept': 'application/json',\n              'Origin': 'http://localhost:3000'\n            },\n            body: JSON.stringify(payload),\n          });\n          console.log('Local content upload response status:', res.status);\n\n          // If local returns 401, try to get a completely fresh token\n          if (res.status === 401) {\n            console.log('Local auth failed, getting completely fresh token...');\n            const completelyFreshToken = await firebaseUser.getIdToken(true);\n            console.log('Completely fresh token obtained');\n\n            res = await fetch('http://localhost:5000/api/content/upload', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${completelyFreshToken}`,\n                'Accept': 'application/json',\n                'Origin': 'http://localhost:3000'\n              },\n              body: JSON.stringify(payload),\n            });\n            console.log('Retry local content upload response status:', res.status);\n          }\n        } catch (localError) {\n          console.warn('Local content upload API failed, trying remote:', localError);\n          error = localError;\n        }\n\n        // If local fails or returns non-2xx, try remote\n        if (!res || !res.ok) {\n          try {\n            console.log('Attempting remote upload...');\n            // Get another fresh token for remote call\n            const remoteFreshToken = await firebaseUser.getIdToken(true);\n            res = await fetch(API_ENDPOINTS.CONTENT_UPLOAD, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${remoteFreshToken}`,\n                'Accept': 'application/json'\n              },\n              body: JSON.stringify(payload),\n            });\n            console.log('Remote content upload response status:', res.status);\n          } catch (remoteError) {\n            console.error('Remote content upload API also failed:', remoteError);\n            error = error || remoteError;\n          }\n        }\n\n        if (!res || !res.ok) {\n          if (res && res.status === 401) {\n            console.error('Content upload authentication failed:', await res.text());\n            alert('Authentication failed. Please try logging in again.');\n            return;\n          }\n\n          console.error('Failed to upload content:', res ? res.status : 'No response');\n          const errorText = res ? await res.text() : 'Network error';\n          console.error('Error details:', errorText);\n          alert(`Failed to upload content: ${errorText}`);\n          return;\n        }\n\n        const result = await res.json();\n        console.log('Content uploaded successfully:', result);\n        alert('Content uploaded successfully!');\n\n        // Refresh content list\n        fetchUserContent();\n      } catch (error) {\n        console.error('Error uploading content:', error);\n        if (retryCount < maxRetries) {\n          retryCount++;\n          console.log(`Retrying upload (${retryCount}/${maxRetries})...`);\n          await upload();\n        } else {\n          alert('Error uploading content: ' + error.message);\n        }\n      }\n    };\n\n    await upload();\n  };\n\n  return (\n    <div className=\"App\">\n      <EnvTest />\n      <EnvChecker />\n      <header className=\"App-header\">\n        <h1>AutoPromote</h1>\n        <nav>\n          {user ? (\n            <div>\n              <span>Welcome, {user.name}!</span>\n              <button onClick={handleLogout}>Logout</button>\n            </div>\n          ) : (\n            <div>\n              <button onClick={() => { setShowLogin(true); setShowRegister(false); setShowAdminLogin(false); }}>Login</button>\n              <button onClick={() => { setShowRegister(true); setShowLogin(false); setShowAdminLogin(false); }}>Register</button>\n            </div>\n          )}\n        </nav>\n      </header>\n\n      <main>\n        {showLogin && (\n          <div>\n            <LoginForm onLogin={handleLogin} loginUser={loginUser} />\n          </div>\n        )}\n        \n        {/* Admin login form is only rendered when showAdminLogin is true */}\n        {showAdminLogin && (\n          <div>\n            <AdminLoginForm onLogin={handleLogin} />\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\n              <button \n                onClick={() => { setShowLogin(true); setShowRegister(false); setShowAdminLogin(false); }}\n                style={{ \n                  background: 'none', \n                  border: 'none', \n                  color: '#1976d2', \n                  textDecoration: 'underline',\n                  cursor: 'pointer' \n                }}\n              >\n                Back to Login\n              </button>\n            </div>\n          </div>\n        )}\n        \n        {showRegister && <RegisterForm registerUser={registerUser} />}\n\n        {user && (\n          <>\n            {isAdmin || user.role === 'admin' || user.isAdmin === true ? (\n              <AdminDashboard analytics={analytics} user={user} />\n            ) : (\n              <div>\n                <ContentUploadForm onUpload={handleUploadContent} />\n                <ContentList content={content} />\n              </div>\n            )}\n          </>\n        )}\n\n        {!user && !showLogin && !showRegister && (\n          <div className=\"WelcomeSection\" style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            minHeight: '60vh',\n            background: 'linear-gradient(135deg, #1976d2 0%, #64b5f6 100%)',\n            color: '#fff',\n            borderRadius: '16px',\n            boxShadow: '0 8px 32px rgba(25, 118, 210, 0.2)',\n            padding: '48px 24px',\n            margin: '32px auto',\n            maxWidth: '500px',\n          }}>\n            <img src=\"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\" alt=\"AutoPromote Logo\" style={{ width: 80, marginBottom: 24 }} />\n            <h2 style={{ fontSize: '2.5rem', fontWeight: 700, marginBottom: 16 }}>Welcome to AutoPromote</h2>\n            <p style={{ fontSize: '1.2rem', marginBottom: 32, textAlign: 'center', maxWidth: 400 }}>\n              <span style={{ fontWeight: 500 }}>AI-powered platform</span> for content promotion and monetization.<br />\n              Grow your audience, boost your revenue, and automate your success.\n            </p>\n            <button \n              onClick={() => setShowRegister(true)}\n              style={{\n                background: '#fff',\n                color: '#1976d2',\n                fontWeight: 600,\n                fontSize: '1.1rem',\n                padding: '12px 32px',\n                borderRadius: '8px',\n                border: 'none',\n                boxShadow: '0 2px 8px rgba(25, 118, 210, 0.15)',\n                cursor: 'pointer',\n                transition: 'background 0.2s',\n              }}\n              onMouseOver={e => e.target.style.background = '#e3f2fd'}\n              onMouseOut={e => e.target.style.background = '#fff'}\n            >\n              Get Started\n            </button>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\n// ...LoginForm, RegisterForm, ContentUploadForm, ContentList, AdminDashboard remain unchanged...\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}