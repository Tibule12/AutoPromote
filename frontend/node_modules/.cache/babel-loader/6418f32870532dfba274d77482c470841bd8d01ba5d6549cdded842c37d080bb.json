{"ast":null,"code":"import _objectSpread from\"C:/Users/Tulani.Mtshwelo/hello/AutoPromote/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// dbSchemaSync.js\n// This file ensures Firebase collections align with admin dashboard requirements\nimport{collection,doc,setDoc,getDoc,getDocs,query,where,orderBy,limit}from'firebase/firestore';import{db}from'../firebaseClient';/**\n * Utility class to ensure database schema aligns with admin dashboard\n */export class DatabaseSyncService{/**\n   * Check if all required collections exist and create sample data if needed\n   */static async validateDatabaseSchema(){console.log('Validating database schema for admin dashboard...');try{// Check for required collections\nawait this.validateCollection('users');await this.validateCollection('content');await this.validateCollection('promotions');await this.validateCollection('activities');// Check for analytics-related collections\nawait this.validateCollection('analytics');console.log('Database schema validation complete');return true;}catch(error){console.error('Error validating database schema:',error);return false;}}/**\n   * Validate that a collection exists with at least one document\n   */static async validateCollection(collectionName){const collectionRef=collection(db,collectionName);const snapshot=await getDocs(query(collectionRef,limit(1)));if(snapshot.empty){console.log(\"Collection '\".concat(collectionName,\"' is empty, adding sample data...\"));await this.createSampleData(collectionName);}else{console.log(\"Collection '\".concat(collectionName,\"' exists and contains data\"));}}/**\n   * Create sample data for a collection if needed\n   */static async createSampleData(collectionName){switch(collectionName){case'users':await this.createSampleUsers();break;case'content':await this.createSampleContent();break;case'promotions':await this.createSamplePromotions();break;case'activities':await this.createSampleActivities();break;case'analytics':await this.createSampleAnalytics();break;default:console.log(\"No sample data generator for '\".concat(collectionName,\"'\"));}}/**\n   * Create sample users if needed\n   */static async createSampleUsers(){const users=[{id:'admin1',name:'Admin User',email:'admin@autopromote.com',role:'admin',createdAt:new Date(Date.now()-30*24*60*60*1000)// 30 days ago\n},{id:'user1',name:'Regular User',email:'user@example.com',role:'user',createdAt:new Date(Date.now()-15*24*60*60*1000)// 15 days ago\n},{id:'user2',name:'Power User',email:'power@example.com',role:'user',createdAt:new Date()// Today\n}];for(const user of users){await setDoc(doc(db,'users',user.id),_objectSpread(_objectSpread({},user),{},{createdAt:user.createdAt}));}console.log('Sample users created');}/**\n   * Create sample content if needed\n   */static async createSampleContent(){const contentItems=[{id:'content1',userId:'user1',title:'Getting Started with AutoPromote',type:'article',url:'https://example.com/article1',description:'A beginner\\'s guide to automated content promotion',views:1250,engagementRate:0.08,status:'active',createdAt:new Date(Date.now()-10*24*60*60*1000)// 10 days ago\n},{id:'content2',userId:'user2',title:'AutoPromote Demo Video',type:'video',url:'https://example.com/video1',description:'Watch this demo to see AutoPromote in action',views:850,engagementRate:0.12,status:'active',createdAt:new Date(Date.now()-5*24*60*60*1000)// 5 days ago\n},{id:'content3',userId:'user1',title:'Marketing Tips and Tricks',type:'article',url:'https://example.com/article2',description:'Advanced marketing strategies for content creators',views:356,engagementRate:0.05,status:'pending',createdAt:new Date()// Today\n}];for(const item of contentItems){await setDoc(doc(db,'content',item.id),_objectSpread(_objectSpread({},item),{},{createdAt:item.createdAt}));}console.log('Sample content created');}/**\n   * Create sample promotions if needed\n   */static async createSamplePromotions(){const now=new Date();const promotions=[{id:'promo1',contentId:'content1',userId:'user1',status:'active',platform:'twitter',startDate:new Date(now.getTime()-2*24*60*60*1000),// 2 days ago\nendDate:new Date(now.getTime()+5*24*60*60*1000),// 5 days from now\nbudget:50.00,results:{impressions:2450,clicks:127,conversions:5},createdAt:new Date(now.getTime()-3*24*60*60*1000)// 3 days ago\n},{id:'promo2',contentId:'content2',userId:'user2',status:'scheduled',platform:'facebook',startDate:new Date(now.getTime()+1*24*60*60*1000),// Tomorrow\nendDate:new Date(now.getTime()+8*24*60*60*1000),// 8 days from now\nbudget:75.00,createdAt:new Date(now.getTime()-1*24*60*60*1000)// Yesterday\n},{id:'promo3',contentId:'content1',userId:'user1',status:'completed',platform:'instagram',startDate:new Date(now.getTime()-15*24*60*60*1000),// 15 days ago\nendDate:new Date(now.getTime()-8*24*60*60*1000),// 8 days ago\nbudget:30.00,results:{impressions:1850,clicks:93,conversions:3},createdAt:new Date(now.getTime()-16*24*60*60*1000)// 16 days ago\n}];for(const promo of promotions){await setDoc(doc(db,'promotions',promo.id),_objectSpread(_objectSpread({},promo),{},{createdAt:promo.createdAt,startDate:promo.startDate,endDate:promo.endDate}));}console.log('Sample promotions created');}/**\n   * Create sample activities if needed\n   */static async createSampleActivities(){const now=new Date();const activities=[{id:'activity1',type:'user',title:'New User Registered',description:'A new user has registered on the platform',timestamp:new Date(now.getTime()-2*24*60*60*1000),// 2 days ago\nuserId:'user2'},{id:'activity2',type:'content',title:'Content Published',description:'A new article has been published',timestamp:new Date(now.getTime()-1*24*60*60*1000),// 1 day ago\ncontentId:'content3',userId:'user1'},{id:'activity3',type:'promotion',title:'Promotion Started',description:'A new promotion campaign has begun',timestamp:new Date(now.getTime()-12*60*60*1000),// 12 hours ago\npromotionId:'promo1',userId:'user1'}];for(const activity of activities){await setDoc(doc(db,'activities',activity.id),_objectSpread(_objectSpread({},activity),{},{timestamp:activity.timestamp}));}console.log('Sample activities created');}/**\n   * Create sample analytics if needed\n   */static async createSampleAnalytics(){const now=new Date();const analytics=[{id:'analytics1',userId:'user1',contentId:'content1',views:1250,clicks:324,shares:57,comments:23,revenue:43.25,date:new Date(now.getTime()-1*24*60*60*1000)// Yesterday\n},{id:'analytics2',userId:'user2',contentId:'content2',views:850,clicks:192,shares:32,comments:15,revenue:26.75,date:new Date(now.getTime()-1*24*60*60*1000)// Yesterday\n}];for(const analytic of analytics){await setDoc(doc(db,'analytics',analytic.id),_objectSpread(_objectSpread({},analytic),{},{date:analytic.date}));}console.log('Sample analytics created');}}export default DatabaseSyncService;","map":{"version":3,"names":["collection","doc","setDoc","getDoc","getDocs","query","where","orderBy","limit","db","DatabaseSyncService","validateDatabaseSchema","console","log","validateCollection","error","collectionName","collectionRef","snapshot","empty","concat","createSampleData","createSampleUsers","createSampleContent","createSamplePromotions","createSampleActivities","createSampleAnalytics","users","id","name","email","role","createdAt","Date","now","user","_objectSpread","contentItems","userId","title","type","url","description","views","engagementRate","status","item","promotions","contentId","platform","startDate","getTime","endDate","budget","results","impressions","clicks","conversions","promo","activities","timestamp","promotionId","activity","analytics","shares","comments","revenue","date","analytic"],"sources":["C:/Users/Tulani.Mtshwelo/hello/AutoPromote/frontend/src/utils/dbSchemaSync.js"],"sourcesContent":["// dbSchemaSync.js\n// This file ensures Firebase collections align with admin dashboard requirements\n\nimport { collection, doc, setDoc, getDoc, getDocs, query, where, orderBy, limit } from 'firebase/firestore';\nimport { db } from '../firebaseClient';\n\n/**\n * Utility class to ensure database schema aligns with admin dashboard\n */\nexport class DatabaseSyncService {\n  /**\n   * Check if all required collections exist and create sample data if needed\n   */\n  static async validateDatabaseSchema() {\n    console.log('Validating database schema for admin dashboard...');\n    \n    try {\n      // Check for required collections\n      await this.validateCollection('users');\n      await this.validateCollection('content');\n      await this.validateCollection('promotions');\n      await this.validateCollection('activities');\n      \n      // Check for analytics-related collections\n      await this.validateCollection('analytics');\n      \n      console.log('Database schema validation complete');\n      return true;\n    } catch (error) {\n      console.error('Error validating database schema:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Validate that a collection exists with at least one document\n   */\n  static async validateCollection(collectionName) {\n    const collectionRef = collection(db, collectionName);\n    const snapshot = await getDocs(query(collectionRef, limit(1)));\n    \n    if (snapshot.empty) {\n      console.log(`Collection '${collectionName}' is empty, adding sample data...`);\n      await this.createSampleData(collectionName);\n    } else {\n      console.log(`Collection '${collectionName}' exists and contains data`);\n    }\n  }\n\n  /**\n   * Create sample data for a collection if needed\n   */\n  static async createSampleData(collectionName) {\n    switch(collectionName) {\n      case 'users':\n        await this.createSampleUsers();\n        break;\n      case 'content':\n        await this.createSampleContent();\n        break;\n      case 'promotions':\n        await this.createSamplePromotions();\n        break;\n      case 'activities':\n        await this.createSampleActivities();\n        break;\n      case 'analytics':\n        await this.createSampleAnalytics();\n        break;\n      default:\n        console.log(`No sample data generator for '${collectionName}'`);\n    }\n  }\n\n  /**\n   * Create sample users if needed\n   */\n  static async createSampleUsers() {\n    const users = [\n      {\n        id: 'admin1',\n        name: 'Admin User',\n        email: 'admin@autopromote.com',\n        role: 'admin',\n        createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000) // 30 days ago\n      },\n      {\n        id: 'user1',\n        name: 'Regular User',\n        email: 'user@example.com',\n        role: 'user',\n        createdAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000) // 15 days ago\n      },\n      {\n        id: 'user2',\n        name: 'Power User',\n        email: 'power@example.com',\n        role: 'user',\n        createdAt: new Date() // Today\n      }\n    ];\n\n    for (const user of users) {\n      await setDoc(doc(db, 'users', user.id), {\n        ...user,\n        createdAt: user.createdAt\n      });\n    }\n    \n    console.log('Sample users created');\n  }\n\n  /**\n   * Create sample content if needed\n   */\n  static async createSampleContent() {\n    const contentItems = [\n      {\n        id: 'content1',\n        userId: 'user1',\n        title: 'Getting Started with AutoPromote',\n        type: 'article',\n        url: 'https://example.com/article1',\n        description: 'A beginner\\'s guide to automated content promotion',\n        views: 1250,\n        engagementRate: 0.08,\n        status: 'active',\n        createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000) // 10 days ago\n      },\n      {\n        id: 'content2',\n        userId: 'user2',\n        title: 'AutoPromote Demo Video',\n        type: 'video',\n        url: 'https://example.com/video1',\n        description: 'Watch this demo to see AutoPromote in action',\n        views: 850,\n        engagementRate: 0.12,\n        status: 'active',\n        createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000) // 5 days ago\n      },\n      {\n        id: 'content3',\n        userId: 'user1',\n        title: 'Marketing Tips and Tricks',\n        type: 'article',\n        url: 'https://example.com/article2',\n        description: 'Advanced marketing strategies for content creators',\n        views: 356,\n        engagementRate: 0.05,\n        status: 'pending',\n        createdAt: new Date() // Today\n      }\n    ];\n\n    for (const item of contentItems) {\n      await setDoc(doc(db, 'content', item.id), {\n        ...item,\n        createdAt: item.createdAt\n      });\n    }\n    \n    console.log('Sample content created');\n  }\n\n  /**\n   * Create sample promotions if needed\n   */\n  static async createSamplePromotions() {\n    const now = new Date();\n    const promotions = [\n      {\n        id: 'promo1',\n        contentId: 'content1',\n        userId: 'user1',\n        status: 'active',\n        platform: 'twitter',\n        startDate: new Date(now.getTime() - 2 * 24 * 60 * 60 * 1000), // 2 days ago\n        endDate: new Date(now.getTime() + 5 * 24 * 60 * 60 * 1000), // 5 days from now\n        budget: 50.00,\n        results: {\n          impressions: 2450,\n          clicks: 127,\n          conversions: 5\n        },\n        createdAt: new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000) // 3 days ago\n      },\n      {\n        id: 'promo2',\n        contentId: 'content2',\n        userId: 'user2',\n        status: 'scheduled',\n        platform: 'facebook',\n        startDate: new Date(now.getTime() + 1 * 24 * 60 * 60 * 1000), // Tomorrow\n        endDate: new Date(now.getTime() + 8 * 24 * 60 * 60 * 1000), // 8 days from now\n        budget: 75.00,\n        createdAt: new Date(now.getTime() - 1 * 24 * 60 * 60 * 1000) // Yesterday\n      },\n      {\n        id: 'promo3',\n        contentId: 'content1',\n        userId: 'user1',\n        status: 'completed',\n        platform: 'instagram',\n        startDate: new Date(now.getTime() - 15 * 24 * 60 * 60 * 1000), // 15 days ago\n        endDate: new Date(now.getTime() - 8 * 24 * 60 * 60 * 1000), // 8 days ago\n        budget: 30.00,\n        results: {\n          impressions: 1850,\n          clicks: 93,\n          conversions: 3\n        },\n        createdAt: new Date(now.getTime() - 16 * 24 * 60 * 60 * 1000) // 16 days ago\n      }\n    ];\n\n    for (const promo of promotions) {\n      await setDoc(doc(db, 'promotions', promo.id), {\n        ...promo,\n        createdAt: promo.createdAt,\n        startDate: promo.startDate,\n        endDate: promo.endDate\n      });\n    }\n    \n    console.log('Sample promotions created');\n  }\n\n  /**\n   * Create sample activities if needed\n   */\n  static async createSampleActivities() {\n    const now = new Date();\n    const activities = [\n      {\n        id: 'activity1',\n        type: 'user',\n        title: 'New User Registered',\n        description: 'A new user has registered on the platform',\n        timestamp: new Date(now.getTime() - 2 * 24 * 60 * 60 * 1000), // 2 days ago\n        userId: 'user2'\n      },\n      {\n        id: 'activity2',\n        type: 'content',\n        title: 'Content Published',\n        description: 'A new article has been published',\n        timestamp: new Date(now.getTime() - 1 * 24 * 60 * 60 * 1000), // 1 day ago\n        contentId: 'content3',\n        userId: 'user1'\n      },\n      {\n        id: 'activity3',\n        type: 'promotion',\n        title: 'Promotion Started',\n        description: 'A new promotion campaign has begun',\n        timestamp: new Date(now.getTime() - 12 * 60 * 60 * 1000), // 12 hours ago\n        promotionId: 'promo1',\n        userId: 'user1'\n      }\n    ];\n\n    for (const activity of activities) {\n      await setDoc(doc(db, 'activities', activity.id), {\n        ...activity,\n        timestamp: activity.timestamp\n      });\n    }\n    \n    console.log('Sample activities created');\n  }\n\n  /**\n   * Create sample analytics if needed\n   */\n  static async createSampleAnalytics() {\n    const now = new Date();\n    const analytics = [\n      {\n        id: 'analytics1',\n        userId: 'user1',\n        contentId: 'content1',\n        views: 1250,\n        clicks: 324,\n        shares: 57,\n        comments: 23,\n        revenue: 43.25,\n        date: new Date(now.getTime() - 1 * 24 * 60 * 60 * 1000) // Yesterday\n      },\n      {\n        id: 'analytics2',\n        userId: 'user2',\n        contentId: 'content2',\n        views: 850,\n        clicks: 192,\n        shares: 32,\n        comments: 15,\n        revenue: 26.75,\n        date: new Date(now.getTime() - 1 * 24 * 60 * 60 * 1000) // Yesterday\n      }\n    ];\n\n    for (const analytic of analytics) {\n      await setDoc(doc(db, 'analytics', analytic.id), {\n        ...analytic,\n        date: analytic.date\n      });\n    }\n    \n    console.log('Sample analytics created');\n  }\n}\n\nexport default DatabaseSyncService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}