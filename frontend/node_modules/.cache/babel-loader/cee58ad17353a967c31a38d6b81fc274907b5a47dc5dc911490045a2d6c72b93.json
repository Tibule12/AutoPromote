{"ast":null,"code":"// EnvChecker.js\nimport React,{useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EnvChecker=()=>{useEffect(()=>{console.log('Environment Variables Check:');console.log('REACT_APP_API_URL:',process.env.REACT_APP_API_URL);console.log('Using URL:',process.env.REACT_APP_API_URL||'http://localhost:5000');// Check if we can connect to the backend\nconst checkBackend=async()=>{try{const apiUrl=process.env.REACT_APP_API_URL||'http://localhost:5000';console.log('Trying to connect to backend at:',apiUrl);const response=await fetch(\"\".concat(apiUrl,\"/api/health\"));if(response.ok){const data=await response.json();console.log('Backend connection successful:',data);}else{console.log('Backend returned error status:',response.status);}}catch(error){console.error('Backend connection failed:',error.message);}};checkBackend();},[]);return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'#f5f5f5',margin:'20px',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Environment Checker\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Check the console for environment variable information\"})]});};export default EnvChecker;","map":{"version":3,"names":["React","useEffect","jsx","_jsx","jsxs","_jsxs","EnvChecker","console","log","process","env","REACT_APP_API_URL","checkBackend","apiUrl","response","fetch","concat","ok","data","json","status","error","message","style","padding","background","margin","borderRadius","children"],"sources":["C:/Users/Tulani.Mtshwelo/Promo/AutoPromote/frontend/src/components/EnvChecker.js"],"sourcesContent":["// EnvChecker.js\r\nimport React, { useEffect } from 'react';\r\n\r\nconst EnvChecker = () => {\r\n  useEffect(() => {\r\n    console.log('Environment Variables Check:');\r\n    console.log('REACT_APP_API_URL:', process.env.REACT_APP_API_URL);\r\n    console.log('Using URL:', process.env.REACT_APP_API_URL || 'http://localhost:5000');\r\n\r\n    // Check if we can connect to the backend\r\n    const checkBackend = async () => {\r\n      try {\r\n        const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n        console.log('Trying to connect to backend at:', apiUrl);\r\n\r\n        const response = await fetch(`${apiUrl}/api/health`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log('Backend connection successful:', data);\r\n        } else {\r\n          console.log('Backend returned error status:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('Backend connection failed:', error.message);\r\n      }\r\n    };\r\n\r\n    checkBackend();\r\n  }, []);\r\n  \r\n  return (\r\n    <div style={{ padding: '20px', background: '#f5f5f5', margin: '20px', borderRadius: '5px' }}>\r\n      <h3>Environment Checker</h3>\r\n      <p>Check the console for environment variable information</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnvChecker;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzC,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvBL,SAAS,CAAC,IAAM,CACdM,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC3CD,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC,CAChEJ,OAAO,CAACC,GAAG,CAAC,YAAY,CAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAAC,CAEnF;AACA,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAC,MAAM,CAAGJ,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CACvEJ,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEK,MAAM,CAAC,CAEvD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIH,MAAM,eAAa,CAAC,CACpD,GAAIC,QAAQ,CAACG,EAAE,CAAE,CACf,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClCZ,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEU,IAAI,CAAC,CACrD,CAAC,IAAM,CACLX,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEM,QAAQ,CAACM,MAAM,CAAC,CAChE,CACF,CAAE,MAAOC,KAAK,CAAE,CACdd,OAAO,CAACc,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAACC,OAAO,CAAC,CAC5D,CACF,CAAC,CAEDV,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEP,KAAA,QAAKkB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,SAAS,CAAEC,MAAM,CAAE,MAAM,CAAEC,YAAY,CAAE,KAAM,CAAE,CAAAC,QAAA,eAC1FzB,IAAA,OAAAyB,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5BzB,IAAA,MAAAyB,QAAA,CAAG,wDAAsD,CAAG,CAAC,EAC1D,CAAC,CAEV,CAAC,CAED,cAAe,CAAAtB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}