{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tulani.Mtshwelo\\\\Promo\\\\AutoPromote\\\\frontend\\\\src\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from './firebaseClient';\nimport './Auth.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  onLogin\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (error) setError('');\n  }, [error]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    try {\n      var _user$email;\n      const {\n        email,\n        password\n      } = formData;\n      console.log('Attempting login with:', email);\n\n      // Sign in with Firebase Authentication\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const {\n        user\n      } = userCredential;\n      console.log('Firebase auth successful, getting ID token...');\n\n      // Get the ID token\n      const idToken = await user.getIdToken(true); // Force refresh the token\n\n      // Get user claims to determine role\n      const idTokenResult = await user.getIdTokenResult(true);\n      const isAdmin = idTokenResult.claims.admin === true || idTokenResult.claims.role === 'admin';\n      console.log('User claims:', {\n        admin: idTokenResult.claims.admin,\n        role: idTokenResult.claims.role,\n        isAdmin\n      });\n\n      // Prepare user data for the app\n      const userData = {\n        email: user.email,\n        uid: user.uid,\n        name: user.displayName || ((_user$email = user.email) === null || _user$email === void 0 ? void 0 : _user$email.split('@')[0]),\n        role: isAdmin ? 'admin' : 'user',\n        isAdmin,\n        token: idToken\n      };\n      console.log('Login successful:', userData);\n\n      // Pass user info to parent component\n      onLogin(userData);\n    } catch (error) {\n      console.error('Login error:', error);\n      console.error('Error details:', {\n        code: error.code,\n        message: error.message\n      });\n      let errorMessage = 'Login failed. ';\n      switch (error.code) {\n        case 'auth/invalid-credential':\n          errorMessage += 'Invalid email or password.';\n          break;\n        case 'auth/user-not-found':\n          errorMessage += 'No account exists with this email.';\n          break;\n        case 'auth/wrong-password':\n          errorMessage += 'Incorrect password.';\n          break;\n        case 'auth/invalid-api-key':\n          errorMessage += 'Invalid Firebase configuration. Please check the setup.';\n          break;\n        case 'auth/network-request-failed':\n          errorMessage += 'Network error. Please check your connection.';\n          break;\n        case 'auth/too-many-requests':\n          errorMessage += 'Too many failed login attempts. Please try again later.';\n          break;\n        default:\n          errorMessage += error.message;\n      }\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"auth-title\",\n        children: \"Welcome Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          className: \"form-input\",\n          placeholder: \"Enter your email\",\n          required: true,\n          autoComplete: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          className: \"form-input\",\n          placeholder: \"Enter your password\",\n          required: true,\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: \"auth-button\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), \"Signing in...\"]\n        }, void 0, true) : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: () => window.location.reload(),\n        className: \"auth-link\",\n        children: \"Don't have an account? Create one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"rrnmCNp0+HocKfLWD+OZoOcW4qM=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useCallback","signInWithEmailAndPassword","auth","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","onLogin","_s","formData","setFormData","email","password","error","setError","isLoading","setIsLoading","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","_user$email","console","log","userCredential","user","idToken","getIdToken","idTokenResult","getIdTokenResult","isAdmin","claims","admin","role","userData","uid","displayName","split","token","code","message","errorMessage","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","required","autoComplete","disabled","href","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/Tulani.Mtshwelo/Promo/AutoPromote/frontend/src/LoginForm.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from './firebaseClient';\r\nimport './Auth.css';\r\n\r\nconst LoginForm = ({ onLogin }) => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = useCallback((e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    if (error) setError('');\r\n  }, [error]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const { email, password } = formData;\r\n\r\n      console.log('Attempting login with:', email);\r\n\r\n      // Sign in with Firebase Authentication\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const { user } = userCredential;\r\n\r\n      console.log('Firebase auth successful, getting ID token...');\r\n\r\n      // Get the ID token\r\n      const idToken = await user.getIdToken(true);  // Force refresh the token\r\n\r\n      // Get user claims to determine role\r\n      const idTokenResult = await user.getIdTokenResult(true);\r\n      const isAdmin = idTokenResult.claims.admin === true || idTokenResult.claims.role === 'admin';\r\n\r\n      console.log('User claims:', {\r\n        admin: idTokenResult.claims.admin,\r\n        role: idTokenResult.claims.role,\r\n        isAdmin\r\n      });\r\n\r\n      // Prepare user data for the app\r\n      const userData = {\r\n        email: user.email,\r\n        uid: user.uid,\r\n        name: user.displayName || user.email?.split('@')[0],\r\n        role: isAdmin ? 'admin' : 'user',\r\n        isAdmin,\r\n        token: idToken\r\n      };\r\n\r\n      console.log('Login successful:', userData);\r\n\r\n      // Pass user info to parent component\r\n      onLogin(userData);\r\n\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      console.error('Error details:', {\r\n        code: error.code,\r\n        message: error.message\r\n      });\r\n\r\n      let errorMessage = 'Login failed. ';\r\n      switch (error.code) {\r\n        case 'auth/invalid-credential':\r\n          errorMessage += 'Invalid email or password.';\r\n          break;\r\n        case 'auth/user-not-found':\r\n          errorMessage += 'No account exists with this email.';\r\n          break;\r\n        case 'auth/wrong-password':\r\n          errorMessage += 'Incorrect password.';\r\n          break;\r\n        case 'auth/invalid-api-key':\r\n          errorMessage += 'Invalid Firebase configuration. Please check the setup.';\r\n          break;\r\n        case 'auth/network-request-failed':\r\n          errorMessage += 'Network error. Please check your connection.';\r\n          break;\r\n        case 'auth/too-many-requests':\r\n          errorMessage += 'Too many failed login attempts. Please try again later.';\r\n          break;\r\n        default:\r\n          errorMessage += error.message;\r\n      }\r\n\r\n      setError(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <form onSubmit={handleSubmit} className=\"auth-form\">\r\n        <h2 className=\"auth-title\">Welcome Back</h2>\r\n        {error && (\r\n          <div className=\"error-message\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className=\"form-input\"\r\n            placeholder=\"Enter your email\"\r\n            required\r\n            autoComplete=\"email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            className=\"form-input\"\r\n            placeholder=\"Enter your password\"\r\n            required\r\n            autoComplete=\"current-password\"\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n          className=\"auth-button\"\r\n        >\r\n          {isLoading ? (\r\n            <>\r\n              <span className=\"loading-spinner\"></span>\r\n              Signing in...\r\n            </>\r\n          ) : (\r\n            'Sign In'\r\n          )}\r\n        </button>\r\n\r\n        <a href=\"#\" onClick={() => window.location.reload()} className=\"auth-link\">\r\n          Don't have an account? Create one\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}