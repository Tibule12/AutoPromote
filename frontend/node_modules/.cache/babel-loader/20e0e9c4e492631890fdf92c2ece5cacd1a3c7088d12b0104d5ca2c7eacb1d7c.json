{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tulani.Mtshwelo\\\\Promo\\\\AutoPromote\\\\frontend\\\\src\\\\components\\\\EnvChecker.js\",\n  _s = $RefreshSig$();\n// EnvChecker.js\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnvChecker = () => {\n  _s();\n  useEffect(() => {\n    console.log('Environment Variables Check:');\n    console.log('REACT_APP_API_URL:', process.env.REACT_APP_API_URL);\n    console.log('Using URL:', process.env.REACT_APP_API_URL || 'http://localhost:5001');\n\n    // Check if we can connect to the backend\n    const checkBackend = async () => {\n      try {\n        const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5001';\n        console.log('Trying to connect to backend at:', apiUrl);\n        const response = await fetch(`${apiUrl}/api/health`);\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Backend connection successful:', data);\n        } else {\n          console.log('Backend returned error status:', response.status);\n        }\n      } catch (error) {\n        console.error('Backend connection failed:', error.message);\n      }\n    };\n    checkBackend();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      background: '#f5f5f5',\n      margin: '20px',\n      borderRadius: '5px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Environment Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Check the console for environment variable information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(EnvChecker, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = EnvChecker;\nexport default EnvChecker;\nvar _c;\n$RefreshReg$(_c, \"EnvChecker\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","EnvChecker","_s","console","log","process","env","REACT_APP_API_URL","checkBackend","apiUrl","response","fetch","ok","data","json","status","error","message","style","padding","background","margin","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tulani.Mtshwelo/Promo/AutoPromote/frontend/src/components/EnvChecker.js"],"sourcesContent":["// EnvChecker.js\r\nimport React, { useEffect } from 'react';\r\n\r\nconst EnvChecker = () => {\r\n  useEffect(() => {\r\n    console.log('Environment Variables Check:');\r\n    console.log('REACT_APP_API_URL:', process.env.REACT_APP_API_URL);\r\n    console.log('Using URL:', process.env.REACT_APP_API_URL || 'http://localhost:5001');\r\n    \r\n    // Check if we can connect to the backend\r\n    const checkBackend = async () => {\r\n      try {\r\n        const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5001';\r\n        console.log('Trying to connect to backend at:', apiUrl);\r\n        \r\n        const response = await fetch(`${apiUrl}/api/health`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log('Backend connection successful:', data);\r\n        } else {\r\n          console.log('Backend returned error status:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('Backend connection failed:', error.message);\r\n      }\r\n    };\r\n    \r\n    checkBackend();\r\n  }, []);\r\n  \r\n  return (\r\n    <div style={{ padding: '20px', background: '#f5f5f5', margin: '20px', borderRadius: '5px' }}>\r\n      <h3>Environment Checker</h3>\r\n      <p>Check the console for environment variable information</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnvChecker;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvBJ,SAAS,CAAC,MAAM;IACdK,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3CD,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC;IAChEJ,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB,CAAC;;IAEnF;IACA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,MAAM,GAAGJ,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;QACvEJ,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEK,MAAM,CAAC;QAEvD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGF,MAAM,aAAa,CAAC;QACpD,IAAIC,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCX,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAES,IAAI,CAAC;QACrD,CAAC,MAAM;UACLV,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEM,QAAQ,CAACK,MAAM,CAAC;QAChE;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdb,OAAO,CAACa,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC5D;IACF,CAAC;IAEDT,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKkB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,SAAS;MAAEC,MAAM,EAAE,MAAM;MAAEC,YAAY,EAAE;IAAM,CAAE;IAAAC,QAAA,gBAC1FvB,OAAA;MAAAuB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B3B,OAAA;MAAAuB,QAAA,EAAG;IAAsD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAACzB,EAAA,CAjCID,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}