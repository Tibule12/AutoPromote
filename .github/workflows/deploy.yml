name: Deploy AutoPromote

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: package-lock.json
        
    - name: Install backend dependencies
      run: npm ci
      
    - name: Run backend tests
      run: node simple-test.js
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: 5000

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: test-backend
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.DEPLOY_TOKEN || secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: autopromote-client/package-lock.json
        
    - name: Install frontend dependencies
      run: cd ../autopromote-client && npm ci
      
    - name: Build frontend
      run: cd ../autopromote-client && npm run build
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.DEPLOY_TOKEN || secrets.GITHUB_TOKEN }}
        publish_dir: ../autopromote-client/build
        keep_files: false
        publish_branch: gh-pages

  deploy-backend:
    runs-on: ubuntu-latest
    needs: test-backend
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: package-lock.json
        
    - name: Install backend dependencies
      run: npm ci
      
    - name: Deploy backend to Vercel (recommended for Node.js)
      run: |
        echo "Vercel deployment setup would go here"
        echo "Install Vercel CLI: npm i -g vercel"
        echo "Run: vercel --prod --token=$VERCEL_TOKEN"
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        
    - name: Alternative - Deploy to Railway
      run: |
        echo "Railway deployment setup would go here"
        echo "Install Railway CLI and deploy"
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
