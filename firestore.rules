rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User can read their own document and admins can read all
    match /users/{userId} {
      allow read: if request.auth.uid == userId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth.uid == userId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow delete: if false;  // Only allow deletes through admin SDK
    }
    
    // Users can read/write their own content, admins can read all
    match /content/{contentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Users can read their own analytics, admins can read all
    match /analytics/{analyticsId} {
      allow read: if resource.data.userId == request.auth.uid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow write: if false;  // Only allow writes through admin SDK
    }
    
    // Users can read their own promotions, admins can read all
    match /promotions/{promotionId} {
      allow read: if resource.data.userId == request.auth.uid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if false;  // Only allow updates through admin SDK
    }
  }
}
